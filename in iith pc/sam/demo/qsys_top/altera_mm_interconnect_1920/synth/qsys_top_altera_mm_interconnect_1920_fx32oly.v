// qsys_top_altera_mm_interconnect_1920_fx32oly.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 22.4 94

`timescale 1 ps / 1 ps
module qsys_top_altera_mm_interconnect_1920_fx32oly (
		input  wire [31:0]  msgdma_mm2s_mm_read_address,                     //                       msgdma_mm2s_mm_read.address
		output wire         msgdma_mm2s_mm_read_waitrequest,                 //                                          .waitrequest
		input  wire [15:0]  msgdma_mm2s_mm_read_byteenable,                  //                                          .byteenable
		input  wire         msgdma_mm2s_mm_read_read,                        //                                          .read
		output wire [127:0] msgdma_mm2s_mm_read_readdata,                    //                                          .readdata
		output wire         msgdma_mm2s_mm_read_readdatavalid,               //                                          .readdatavalid
		output wire [4:0]   agilex_hps_f2h_axi_slave_awid,                   //                  agilex_hps_f2h_axi_slave.awid
		output wire [31:0]  agilex_hps_f2h_axi_slave_awaddr,                 //                                          .awaddr
		output wire [7:0]   agilex_hps_f2h_axi_slave_awlen,                  //                                          .awlen
		output wire [2:0]   agilex_hps_f2h_axi_slave_awsize,                 //                                          .awsize
		output wire [1:0]   agilex_hps_f2h_axi_slave_awburst,                //                                          .awburst
		output wire [0:0]   agilex_hps_f2h_axi_slave_awlock,                 //                                          .awlock
		output wire [3:0]   agilex_hps_f2h_axi_slave_awcache,                //                                          .awcache
		output wire [2:0]   agilex_hps_f2h_axi_slave_awprot,                 //                                          .awprot
		output wire [22:0]  agilex_hps_f2h_axi_slave_awuser,                 //                                          .awuser
		output wire [3:0]   agilex_hps_f2h_axi_slave_awqos,                  //                                          .awqos
		output wire         agilex_hps_f2h_axi_slave_awvalid,                //                                          .awvalid
		input  wire         agilex_hps_f2h_axi_slave_awready,                //                                          .awready
		output wire [127:0] agilex_hps_f2h_axi_slave_wdata,                  //                                          .wdata
		output wire [15:0]  agilex_hps_f2h_axi_slave_wstrb,                  //                                          .wstrb
		output wire         agilex_hps_f2h_axi_slave_wlast,                  //                                          .wlast
		output wire         agilex_hps_f2h_axi_slave_wvalid,                 //                                          .wvalid
		input  wire         agilex_hps_f2h_axi_slave_wready,                 //                                          .wready
		input  wire [4:0]   agilex_hps_f2h_axi_slave_bid,                    //                                          .bid
		input  wire [1:0]   agilex_hps_f2h_axi_slave_bresp,                  //                                          .bresp
		input  wire         agilex_hps_f2h_axi_slave_bvalid,                 //                                          .bvalid
		output wire         agilex_hps_f2h_axi_slave_bready,                 //                                          .bready
		output wire [4:0]   agilex_hps_f2h_axi_slave_arid,                   //                                          .arid
		output wire [31:0]  agilex_hps_f2h_axi_slave_araddr,                 //                                          .araddr
		output wire [7:0]   agilex_hps_f2h_axi_slave_arlen,                  //                                          .arlen
		output wire [2:0]   agilex_hps_f2h_axi_slave_arsize,                 //                                          .arsize
		output wire [1:0]   agilex_hps_f2h_axi_slave_arburst,                //                                          .arburst
		output wire [0:0]   agilex_hps_f2h_axi_slave_arlock,                 //                                          .arlock
		output wire [3:0]   agilex_hps_f2h_axi_slave_arcache,                //                                          .arcache
		output wire [2:0]   agilex_hps_f2h_axi_slave_arprot,                 //                                          .arprot
		output wire [22:0]  agilex_hps_f2h_axi_slave_aruser,                 //                                          .aruser
		output wire [3:0]   agilex_hps_f2h_axi_slave_arqos,                  //                                          .arqos
		output wire         agilex_hps_f2h_axi_slave_arvalid,                //                                          .arvalid
		input  wire         agilex_hps_f2h_axi_slave_arready,                //                                          .arready
		input  wire [4:0]   agilex_hps_f2h_axi_slave_rid,                    //                                          .rid
		input  wire [127:0] agilex_hps_f2h_axi_slave_rdata,                  //                                          .rdata
		input  wire [1:0]   agilex_hps_f2h_axi_slave_rresp,                  //                                          .rresp
		input  wire         agilex_hps_f2h_axi_slave_rlast,                  //                                          .rlast
		input  wire         agilex_hps_f2h_axi_slave_rvalid,                 //                                          .rvalid
		output wire         agilex_hps_f2h_axi_slave_rready,                 //                                          .rready
		input  wire         msgdma_mm2s_reset_n_reset_bridge_in_reset_reset, // msgdma_mm2s_reset_n_reset_bridge_in_reset.reset
		input  wire         clk_100_out_clk_clk                              //                           clk_100_out_clk.clk
	);

	wire          msgdma_mm2s_mm_read_translator_avalon_universal_master_0_waitrequest;   // msgdma_mm2s_mm_read_agent:av_waitrequest -> msgdma_mm2s_mm_read_translator:uav_waitrequest
	wire  [127:0] msgdma_mm2s_mm_read_translator_avalon_universal_master_0_readdata;      // msgdma_mm2s_mm_read_agent:av_readdata -> msgdma_mm2s_mm_read_translator:uav_readdata
	wire          msgdma_mm2s_mm_read_translator_avalon_universal_master_0_debugaccess;   // msgdma_mm2s_mm_read_translator:uav_debugaccess -> msgdma_mm2s_mm_read_agent:av_debugaccess
	wire   [31:0] msgdma_mm2s_mm_read_translator_avalon_universal_master_0_address;       // msgdma_mm2s_mm_read_translator:uav_address -> msgdma_mm2s_mm_read_agent:av_address
	wire          msgdma_mm2s_mm_read_translator_avalon_universal_master_0_read;          // msgdma_mm2s_mm_read_translator:uav_read -> msgdma_mm2s_mm_read_agent:av_read
	wire   [15:0] msgdma_mm2s_mm_read_translator_avalon_universal_master_0_byteenable;    // msgdma_mm2s_mm_read_translator:uav_byteenable -> msgdma_mm2s_mm_read_agent:av_byteenable
	wire          msgdma_mm2s_mm_read_translator_avalon_universal_master_0_readdatavalid; // msgdma_mm2s_mm_read_agent:av_readdatavalid -> msgdma_mm2s_mm_read_translator:uav_readdatavalid
	wire          msgdma_mm2s_mm_read_translator_avalon_universal_master_0_lock;          // msgdma_mm2s_mm_read_translator:uav_lock -> msgdma_mm2s_mm_read_agent:av_lock
	wire          msgdma_mm2s_mm_read_translator_avalon_universal_master_0_write;         // msgdma_mm2s_mm_read_translator:uav_write -> msgdma_mm2s_mm_read_agent:av_write
	wire  [127:0] msgdma_mm2s_mm_read_translator_avalon_universal_master_0_writedata;     // msgdma_mm2s_mm_read_translator:uav_writedata -> msgdma_mm2s_mm_read_agent:av_writedata
	wire    [4:0] msgdma_mm2s_mm_read_translator_avalon_universal_master_0_burstcount;    // msgdma_mm2s_mm_read_translator:uav_burstcount -> msgdma_mm2s_mm_read_agent:av_burstcount
	wire    [0:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_ruser;                 // agilex_hps_f2h_axi_slave_translator:s0_ruser -> agilex_hps_f2h_axi_slave_agent:ruser
	wire    [0:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_wuser;                 // agilex_hps_f2h_axi_slave_agent:wuser -> agilex_hps_f2h_axi_slave_translator:s0_wuser
	wire    [1:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_awburst;               // agilex_hps_f2h_axi_slave_agent:awburst -> agilex_hps_f2h_axi_slave_translator:s0_awburst
	wire    [3:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_arregion;              // agilex_hps_f2h_axi_slave_agent:arregion -> agilex_hps_f2h_axi_slave_translator:s0_arregion
	wire   [22:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_awuser;                // agilex_hps_f2h_axi_slave_agent:awuser -> agilex_hps_f2h_axi_slave_translator:s0_awuser
	wire    [7:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_arlen;                 // agilex_hps_f2h_axi_slave_agent:arlen -> agilex_hps_f2h_axi_slave_translator:s0_arlen
	wire    [3:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_arqos;                 // agilex_hps_f2h_axi_slave_agent:arqos -> agilex_hps_f2h_axi_slave_translator:s0_arqos
	wire   [15:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_wstrb;                 // agilex_hps_f2h_axi_slave_agent:wstrb -> agilex_hps_f2h_axi_slave_translator:s0_wstrb
	wire          agilex_hps_f2h_axi_slave_agent_altera_axi_master_wready;                // agilex_hps_f2h_axi_slave_translator:s0_wready -> agilex_hps_f2h_axi_slave_agent:wready
	wire    [0:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_rid;                   // agilex_hps_f2h_axi_slave_translator:s0_rid -> agilex_hps_f2h_axi_slave_agent:rid
	wire          agilex_hps_f2h_axi_slave_agent_altera_axi_master_rready;                // agilex_hps_f2h_axi_slave_agent:rready -> agilex_hps_f2h_axi_slave_translator:s0_rready
	wire    [7:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_awlen;                 // agilex_hps_f2h_axi_slave_agent:awlen -> agilex_hps_f2h_axi_slave_translator:s0_awlen
	wire    [3:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_awqos;                 // agilex_hps_f2h_axi_slave_agent:awqos -> agilex_hps_f2h_axi_slave_translator:s0_awqos
	wire    [3:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_arcache;               // agilex_hps_f2h_axi_slave_agent:arcache -> agilex_hps_f2h_axi_slave_translator:s0_arcache
	wire          agilex_hps_f2h_axi_slave_agent_altera_axi_master_wvalid;                // agilex_hps_f2h_axi_slave_agent:wvalid -> agilex_hps_f2h_axi_slave_translator:s0_wvalid
	wire   [31:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_araddr;                // agilex_hps_f2h_axi_slave_agent:araddr -> agilex_hps_f2h_axi_slave_translator:s0_araddr
	wire    [2:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_arprot;                // agilex_hps_f2h_axi_slave_agent:arprot -> agilex_hps_f2h_axi_slave_translator:s0_arprot
	wire    [2:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_awprot;                // agilex_hps_f2h_axi_slave_agent:awprot -> agilex_hps_f2h_axi_slave_translator:s0_awprot
	wire  [127:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_wdata;                 // agilex_hps_f2h_axi_slave_agent:wdata -> agilex_hps_f2h_axi_slave_translator:s0_wdata
	wire          agilex_hps_f2h_axi_slave_agent_altera_axi_master_arvalid;               // agilex_hps_f2h_axi_slave_agent:arvalid -> agilex_hps_f2h_axi_slave_translator:s0_arvalid
	wire    [3:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_awcache;               // agilex_hps_f2h_axi_slave_agent:awcache -> agilex_hps_f2h_axi_slave_translator:s0_awcache
	wire    [0:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_arid;                  // agilex_hps_f2h_axi_slave_agent:arid -> agilex_hps_f2h_axi_slave_translator:s0_arid
	wire    [0:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_arlock;                // agilex_hps_f2h_axi_slave_agent:arlock -> agilex_hps_f2h_axi_slave_translator:s0_arlock
	wire    [0:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_awlock;                // agilex_hps_f2h_axi_slave_agent:awlock -> agilex_hps_f2h_axi_slave_translator:s0_awlock
	wire   [31:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_awaddr;                // agilex_hps_f2h_axi_slave_agent:awaddr -> agilex_hps_f2h_axi_slave_translator:s0_awaddr
	wire    [1:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_bresp;                 // agilex_hps_f2h_axi_slave_translator:s0_bresp -> agilex_hps_f2h_axi_slave_agent:bresp
	wire          agilex_hps_f2h_axi_slave_agent_altera_axi_master_arready;               // agilex_hps_f2h_axi_slave_translator:s0_arready -> agilex_hps_f2h_axi_slave_agent:arready
	wire  [127:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_rdata;                 // agilex_hps_f2h_axi_slave_translator:s0_rdata -> agilex_hps_f2h_axi_slave_agent:rdata
	wire          agilex_hps_f2h_axi_slave_agent_altera_axi_master_awready;               // agilex_hps_f2h_axi_slave_translator:s0_awready -> agilex_hps_f2h_axi_slave_agent:awready
	wire    [1:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_arburst;               // agilex_hps_f2h_axi_slave_agent:arburst -> agilex_hps_f2h_axi_slave_translator:s0_arburst
	wire    [2:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_arsize;                // agilex_hps_f2h_axi_slave_agent:arsize -> agilex_hps_f2h_axi_slave_translator:s0_arsize
	wire          agilex_hps_f2h_axi_slave_agent_altera_axi_master_bready;                // agilex_hps_f2h_axi_slave_agent:bready -> agilex_hps_f2h_axi_slave_translator:s0_bready
	wire          agilex_hps_f2h_axi_slave_agent_altera_axi_master_rlast;                 // agilex_hps_f2h_axi_slave_translator:s0_rlast -> agilex_hps_f2h_axi_slave_agent:rlast
	wire          agilex_hps_f2h_axi_slave_agent_altera_axi_master_wlast;                 // agilex_hps_f2h_axi_slave_agent:wlast -> agilex_hps_f2h_axi_slave_translator:s0_wlast
	wire    [3:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_awregion;              // agilex_hps_f2h_axi_slave_agent:awregion -> agilex_hps_f2h_axi_slave_translator:s0_awregion
	wire    [0:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_buser;                 // agilex_hps_f2h_axi_slave_translator:s0_buser -> agilex_hps_f2h_axi_slave_agent:buser
	wire    [1:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_rresp;                 // agilex_hps_f2h_axi_slave_translator:s0_rresp -> agilex_hps_f2h_axi_slave_agent:rresp
	wire    [0:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_awid;                  // agilex_hps_f2h_axi_slave_agent:awid -> agilex_hps_f2h_axi_slave_translator:s0_awid
	wire    [0:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_bid;                   // agilex_hps_f2h_axi_slave_translator:s0_bid -> agilex_hps_f2h_axi_slave_agent:bid
	wire          agilex_hps_f2h_axi_slave_agent_altera_axi_master_bvalid;                // agilex_hps_f2h_axi_slave_translator:s0_bvalid -> agilex_hps_f2h_axi_slave_agent:bvalid
	wire    [2:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_awsize;                // agilex_hps_f2h_axi_slave_agent:awsize -> agilex_hps_f2h_axi_slave_translator:s0_awsize
	wire          agilex_hps_f2h_axi_slave_agent_altera_axi_master_awvalid;               // agilex_hps_f2h_axi_slave_agent:awvalid -> agilex_hps_f2h_axi_slave_translator:s0_awvalid
	wire   [22:0] agilex_hps_f2h_axi_slave_agent_altera_axi_master_aruser;                // agilex_hps_f2h_axi_slave_agent:aruser -> agilex_hps_f2h_axi_slave_translator:s0_aruser
	wire          agilex_hps_f2h_axi_slave_agent_altera_axi_master_rvalid;                // agilex_hps_f2h_axi_slave_translator:s0_rvalid -> agilex_hps_f2h_axi_slave_agent:rvalid
	wire          cmd_mux_src_valid;                                                      // cmd_mux:src_valid -> agilex_hps_f2h_axi_slave_agent:write_cp_valid
	wire  [261:0] cmd_mux_src_data;                                                       // cmd_mux:src_data -> agilex_hps_f2h_axi_slave_agent:write_cp_data
	wire          cmd_mux_src_ready;                                                      // agilex_hps_f2h_axi_slave_agent:write_cp_ready -> cmd_mux:src_ready
	wire    [1:0] cmd_mux_src_channel;                                                    // cmd_mux:src_channel -> agilex_hps_f2h_axi_slave_agent:write_cp_channel
	wire          cmd_mux_src_startofpacket;                                              // cmd_mux:src_startofpacket -> agilex_hps_f2h_axi_slave_agent:write_cp_startofpacket
	wire          cmd_mux_src_endofpacket;                                                // cmd_mux:src_endofpacket -> agilex_hps_f2h_axi_slave_agent:write_cp_endofpacket
	wire          cmd_mux_001_src_valid;                                                  // cmd_mux_001:src_valid -> agilex_hps_f2h_axi_slave_agent:read_cp_valid
	wire  [261:0] cmd_mux_001_src_data;                                                   // cmd_mux_001:src_data -> agilex_hps_f2h_axi_slave_agent:read_cp_data
	wire          cmd_mux_001_src_ready;                                                  // agilex_hps_f2h_axi_slave_agent:read_cp_ready -> cmd_mux_001:src_ready
	wire    [1:0] cmd_mux_001_src_channel;                                                // cmd_mux_001:src_channel -> agilex_hps_f2h_axi_slave_agent:read_cp_channel
	wire          cmd_mux_001_src_startofpacket;                                          // cmd_mux_001:src_startofpacket -> agilex_hps_f2h_axi_slave_agent:read_cp_startofpacket
	wire          cmd_mux_001_src_endofpacket;                                            // cmd_mux_001:src_endofpacket -> agilex_hps_f2h_axi_slave_agent:read_cp_endofpacket
	wire          msgdma_mm2s_mm_read_agent_cp_valid;                                     // msgdma_mm2s_mm_read_agent:cp_valid -> router:sink_valid
	wire  [261:0] msgdma_mm2s_mm_read_agent_cp_data;                                      // msgdma_mm2s_mm_read_agent:cp_data -> router:sink_data
	wire          msgdma_mm2s_mm_read_agent_cp_ready;                                     // router:sink_ready -> msgdma_mm2s_mm_read_agent:cp_ready
	wire          msgdma_mm2s_mm_read_agent_cp_startofpacket;                             // msgdma_mm2s_mm_read_agent:cp_startofpacket -> router:sink_startofpacket
	wire          msgdma_mm2s_mm_read_agent_cp_endofpacket;                               // msgdma_mm2s_mm_read_agent:cp_endofpacket -> router:sink_endofpacket
	wire          agilex_hps_f2h_axi_slave_agent_write_rp_valid;                          // agilex_hps_f2h_axi_slave_agent:write_rp_valid -> router_001:sink_valid
	wire  [261:0] agilex_hps_f2h_axi_slave_agent_write_rp_data;                           // agilex_hps_f2h_axi_slave_agent:write_rp_data -> router_001:sink_data
	wire          agilex_hps_f2h_axi_slave_agent_write_rp_ready;                          // router_001:sink_ready -> agilex_hps_f2h_axi_slave_agent:write_rp_ready
	wire          agilex_hps_f2h_axi_slave_agent_write_rp_startofpacket;                  // agilex_hps_f2h_axi_slave_agent:write_rp_startofpacket -> router_001:sink_startofpacket
	wire          agilex_hps_f2h_axi_slave_agent_write_rp_endofpacket;                    // agilex_hps_f2h_axi_slave_agent:write_rp_endofpacket -> router_001:sink_endofpacket
	wire          router_001_src_valid;                                                   // router_001:src_valid -> rsp_demux:sink_valid
	wire  [261:0] router_001_src_data;                                                    // router_001:src_data -> rsp_demux:sink_data
	wire          router_001_src_ready;                                                   // rsp_demux:sink_ready -> router_001:src_ready
	wire    [1:0] router_001_src_channel;                                                 // router_001:src_channel -> rsp_demux:sink_channel
	wire          router_001_src_startofpacket;                                           // router_001:src_startofpacket -> rsp_demux:sink_startofpacket
	wire          router_001_src_endofpacket;                                             // router_001:src_endofpacket -> rsp_demux:sink_endofpacket
	wire          agilex_hps_f2h_axi_slave_agent_read_rp_valid;                           // agilex_hps_f2h_axi_slave_agent:read_rp_valid -> router_002:sink_valid
	wire  [261:0] agilex_hps_f2h_axi_slave_agent_read_rp_data;                            // agilex_hps_f2h_axi_slave_agent:read_rp_data -> router_002:sink_data
	wire          agilex_hps_f2h_axi_slave_agent_read_rp_ready;                           // router_002:sink_ready -> agilex_hps_f2h_axi_slave_agent:read_rp_ready
	wire          agilex_hps_f2h_axi_slave_agent_read_rp_startofpacket;                   // agilex_hps_f2h_axi_slave_agent:read_rp_startofpacket -> router_002:sink_startofpacket
	wire          agilex_hps_f2h_axi_slave_agent_read_rp_endofpacket;                     // agilex_hps_f2h_axi_slave_agent:read_rp_endofpacket -> router_002:sink_endofpacket
	wire          router_002_src_valid;                                                   // router_002:src_valid -> rsp_demux_001:sink_valid
	wire  [261:0] router_002_src_data;                                                    // router_002:src_data -> rsp_demux_001:sink_data
	wire          router_002_src_ready;                                                   // rsp_demux_001:sink_ready -> router_002:src_ready
	wire    [1:0] router_002_src_channel;                                                 // router_002:src_channel -> rsp_demux_001:sink_channel
	wire          router_002_src_startofpacket;                                           // router_002:src_startofpacket -> rsp_demux_001:sink_startofpacket
	wire          router_002_src_endofpacket;                                             // router_002:src_endofpacket -> rsp_demux_001:sink_endofpacket
	wire          router_src_valid;                                                       // router:src_valid -> msgdma_mm2s_mm_read_limiter:cmd_sink_valid
	wire  [261:0] router_src_data;                                                        // router:src_data -> msgdma_mm2s_mm_read_limiter:cmd_sink_data
	wire          router_src_ready;                                                       // msgdma_mm2s_mm_read_limiter:cmd_sink_ready -> router:src_ready
	wire    [1:0] router_src_channel;                                                     // router:src_channel -> msgdma_mm2s_mm_read_limiter:cmd_sink_channel
	wire          router_src_startofpacket;                                               // router:src_startofpacket -> msgdma_mm2s_mm_read_limiter:cmd_sink_startofpacket
	wire          router_src_endofpacket;                                                 // router:src_endofpacket -> msgdma_mm2s_mm_read_limiter:cmd_sink_endofpacket
	wire  [261:0] msgdma_mm2s_mm_read_limiter_cmd_src_data;                               // msgdma_mm2s_mm_read_limiter:cmd_src_data -> cmd_demux:sink_data
	wire          msgdma_mm2s_mm_read_limiter_cmd_src_ready;                              // cmd_demux:sink_ready -> msgdma_mm2s_mm_read_limiter:cmd_src_ready
	wire    [1:0] msgdma_mm2s_mm_read_limiter_cmd_src_channel;                            // msgdma_mm2s_mm_read_limiter:cmd_src_channel -> cmd_demux:sink_channel
	wire          msgdma_mm2s_mm_read_limiter_cmd_src_startofpacket;                      // msgdma_mm2s_mm_read_limiter:cmd_src_startofpacket -> cmd_demux:sink_startofpacket
	wire          msgdma_mm2s_mm_read_limiter_cmd_src_endofpacket;                        // msgdma_mm2s_mm_read_limiter:cmd_src_endofpacket -> cmd_demux:sink_endofpacket
	wire          rsp_mux_src_valid;                                                      // rsp_mux:src_valid -> msgdma_mm2s_mm_read_limiter:rsp_sink_valid
	wire  [261:0] rsp_mux_src_data;                                                       // rsp_mux:src_data -> msgdma_mm2s_mm_read_limiter:rsp_sink_data
	wire          rsp_mux_src_ready;                                                      // msgdma_mm2s_mm_read_limiter:rsp_sink_ready -> rsp_mux:src_ready
	wire    [1:0] rsp_mux_src_channel;                                                    // rsp_mux:src_channel -> msgdma_mm2s_mm_read_limiter:rsp_sink_channel
	wire          rsp_mux_src_startofpacket;                                              // rsp_mux:src_startofpacket -> msgdma_mm2s_mm_read_limiter:rsp_sink_startofpacket
	wire          rsp_mux_src_endofpacket;                                                // rsp_mux:src_endofpacket -> msgdma_mm2s_mm_read_limiter:rsp_sink_endofpacket
	wire          msgdma_mm2s_mm_read_limiter_rsp_src_valid;                              // msgdma_mm2s_mm_read_limiter:rsp_src_valid -> msgdma_mm2s_mm_read_agent:rp_valid
	wire  [261:0] msgdma_mm2s_mm_read_limiter_rsp_src_data;                               // msgdma_mm2s_mm_read_limiter:rsp_src_data -> msgdma_mm2s_mm_read_agent:rp_data
	wire          msgdma_mm2s_mm_read_limiter_rsp_src_ready;                              // msgdma_mm2s_mm_read_agent:rp_ready -> msgdma_mm2s_mm_read_limiter:rsp_src_ready
	wire    [1:0] msgdma_mm2s_mm_read_limiter_rsp_src_channel;                            // msgdma_mm2s_mm_read_limiter:rsp_src_channel -> msgdma_mm2s_mm_read_agent:rp_channel
	wire          msgdma_mm2s_mm_read_limiter_rsp_src_startofpacket;                      // msgdma_mm2s_mm_read_limiter:rsp_src_startofpacket -> msgdma_mm2s_mm_read_agent:rp_startofpacket
	wire          msgdma_mm2s_mm_read_limiter_rsp_src_endofpacket;                        // msgdma_mm2s_mm_read_limiter:rsp_src_endofpacket -> msgdma_mm2s_mm_read_agent:rp_endofpacket
	wire          cmd_demux_src0_valid;                                                   // cmd_demux:src0_valid -> cmd_mux:sink0_valid
	wire  [261:0] cmd_demux_src0_data;                                                    // cmd_demux:src0_data -> cmd_mux:sink0_data
	wire          cmd_demux_src0_ready;                                                   // cmd_mux:sink0_ready -> cmd_demux:src0_ready
	wire    [1:0] cmd_demux_src0_channel;                                                 // cmd_demux:src0_channel -> cmd_mux:sink0_channel
	wire          cmd_demux_src0_startofpacket;                                           // cmd_demux:src0_startofpacket -> cmd_mux:sink0_startofpacket
	wire          cmd_demux_src0_endofpacket;                                             // cmd_demux:src0_endofpacket -> cmd_mux:sink0_endofpacket
	wire          cmd_demux_src1_valid;                                                   // cmd_demux:src1_valid -> cmd_mux_001:sink0_valid
	wire  [261:0] cmd_demux_src1_data;                                                    // cmd_demux:src1_data -> cmd_mux_001:sink0_data
	wire          cmd_demux_src1_ready;                                                   // cmd_mux_001:sink0_ready -> cmd_demux:src1_ready
	wire    [1:0] cmd_demux_src1_channel;                                                 // cmd_demux:src1_channel -> cmd_mux_001:sink0_channel
	wire          cmd_demux_src1_startofpacket;                                           // cmd_demux:src1_startofpacket -> cmd_mux_001:sink0_startofpacket
	wire          cmd_demux_src1_endofpacket;                                             // cmd_demux:src1_endofpacket -> cmd_mux_001:sink0_endofpacket
	wire          rsp_demux_src0_valid;                                                   // rsp_demux:src0_valid -> rsp_mux:sink0_valid
	wire  [261:0] rsp_demux_src0_data;                                                    // rsp_demux:src0_data -> rsp_mux:sink0_data
	wire          rsp_demux_src0_ready;                                                   // rsp_mux:sink0_ready -> rsp_demux:src0_ready
	wire    [1:0] rsp_demux_src0_channel;                                                 // rsp_demux:src0_channel -> rsp_mux:sink0_channel
	wire          rsp_demux_src0_startofpacket;                                           // rsp_demux:src0_startofpacket -> rsp_mux:sink0_startofpacket
	wire          rsp_demux_src0_endofpacket;                                             // rsp_demux:src0_endofpacket -> rsp_mux:sink0_endofpacket
	wire          rsp_demux_001_src0_valid;                                               // rsp_demux_001:src0_valid -> rsp_mux:sink1_valid
	wire  [261:0] rsp_demux_001_src0_data;                                                // rsp_demux_001:src0_data -> rsp_mux:sink1_data
	wire          rsp_demux_001_src0_ready;                                               // rsp_mux:sink1_ready -> rsp_demux_001:src0_ready
	wire    [1:0] rsp_demux_001_src0_channel;                                             // rsp_demux_001:src0_channel -> rsp_mux:sink1_channel
	wire          rsp_demux_001_src0_startofpacket;                                       // rsp_demux_001:src0_startofpacket -> rsp_mux:sink1_startofpacket
	wire          rsp_demux_001_src0_endofpacket;                                         // rsp_demux_001:src0_endofpacket -> rsp_mux:sink1_endofpacket
	wire    [1:0] msgdma_mm2s_mm_read_limiter_cmd_valid_data;                             // msgdma_mm2s_mm_read_limiter:cmd_src_valid -> cmd_demux:sink_valid

	qsys_top_altera_merlin_master_translator_191_g7h47bq #(
		.AV_ADDRESS_W                (32),
		.AV_DATA_W                   (128),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (16),
		.UAV_ADDRESS_W               (32),
		.UAV_BURSTCOUNT_W            (5),
		.USE_READ                    (1),
		.USE_WRITE                   (0),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (0),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (16),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0),
		.SYNC_RESET                  (1),
		.WAITREQUEST_ALLOWANCE       (0)
	) msgdma_mm2s_mm_read_translator (
		.clk                    (clk_100_out_clk_clk),                                                                                                                   //   input,    width = 1,                       clk.clk
		.reset                  (msgdma_mm2s_reset_n_reset_bridge_in_reset_reset),                                                                                       //   input,    width = 1,                     reset.reset
		.uav_address            (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_address),                                                                      //  output,   width = 32, avalon_universal_master_0.address
		.uav_burstcount         (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_burstcount),                                                                   //  output,    width = 5,                          .burstcount
		.uav_read               (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_read),                                                                         //  output,    width = 1,                          .read
		.uav_write              (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_write),                                                                        //  output,    width = 1,                          .write
		.uav_waitrequest        (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_waitrequest),                                                                  //   input,    width = 1,                          .waitrequest
		.uav_readdatavalid      (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_readdatavalid),                                                                //   input,    width = 1,                          .readdatavalid
		.uav_byteenable         (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_byteenable),                                                                   //  output,   width = 16,                          .byteenable
		.uav_readdata           (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_readdata),                                                                     //   input,  width = 128,                          .readdata
		.uav_writedata          (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_writedata),                                                                    //  output,  width = 128,                          .writedata
		.uav_lock               (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_lock),                                                                         //  output,    width = 1,                          .lock
		.uav_debugaccess        (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_debugaccess),                                                                  //  output,    width = 1,                          .debugaccess
		.av_address             (msgdma_mm2s_mm_read_address),                                                                                                           //   input,   width = 32,      avalon_anti_master_0.address
		.av_waitrequest         (msgdma_mm2s_mm_read_waitrequest),                                                                                                       //  output,    width = 1,                          .waitrequest
		.av_byteenable          (msgdma_mm2s_mm_read_byteenable),                                                                                                        //   input,   width = 16,                          .byteenable
		.av_read                (msgdma_mm2s_mm_read_read),                                                                                                              //   input,    width = 1,                          .read
		.av_readdata            (msgdma_mm2s_mm_read_readdata),                                                                                                          //  output,  width = 128,                          .readdata
		.av_readdatavalid       (msgdma_mm2s_mm_read_readdatavalid),                                                                                                     //  output,    width = 1,                          .readdatavalid
		.av_burstcount          (1'b1),                                                                                                                                  // (terminated),                                         
		.av_beginbursttransfer  (1'b0),                                                                                                                                  // (terminated),                                         
		.av_begintransfer       (1'b0),                                                                                                                                  // (terminated),                                         
		.av_chipselect          (1'b0),                                                                                                                                  // (terminated),                                         
		.av_write               (1'b0),                                                                                                                                  // (terminated),                                         
		.av_writedata           (128'b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000), // (terminated),                                         
		.av_lock                (1'b0),                                                                                                                                  // (terminated),                                         
		.av_debugaccess         (1'b0),                                                                                                                                  // (terminated),                                         
		.uav_clken              (),                                                                                                                                      // (terminated),                                         
		.av_clken               (1'b1),                                                                                                                                  // (terminated),                                         
		.uav_response           (2'b00),                                                                                                                                 // (terminated),                                         
		.av_response            (),                                                                                                                                      // (terminated),                                         
		.uav_writeresponsevalid (1'b0),                                                                                                                                  // (terminated),                                         
		.av_writeresponsevalid  ()                                                                                                                                       // (terminated),                                         
	);

	qsys_top_altera_merlin_axi_translator_1921_uetfduq #(
		.USE_S0_AWID                       (1),
		.USE_S0_AWREGION                   (1),
		.USE_M0_AWREGION                   (0),
		.USE_S0_AWLEN                      (1),
		.USE_S0_AWSIZE                     (1),
		.USE_S0_AWBURST                    (1),
		.USE_S0_AWLOCK                     (1),
		.USE_M0_AWLOCK                     (1),
		.USE_S0_AWCACHE                    (1),
		.USE_M0_AWCACHE                    (1),
		.USE_M0_AWPROT                     (1),
		.USE_S0_AWQOS                      (1),
		.USE_M0_AWQOS                      (1),
		.USE_S0_WSTRB                      (1),
		.USE_M0_WLAST                      (1),
		.USE_S0_BID                        (1),
		.USE_S0_BRESP                      (1),
		.USE_M0_BRESP                      (1),
		.USE_S0_ARID                       (1),
		.USE_S0_ARREGION                   (1),
		.USE_M0_ARREGION                   (0),
		.USE_S0_ARLEN                      (1),
		.USE_S0_ARSIZE                     (1),
		.USE_S0_ARBURST                    (1),
		.USE_S0_ARLOCK                     (1),
		.USE_M0_ARLOCK                     (1),
		.USE_M0_ARCACHE                    (1),
		.USE_M0_ARQOS                      (1),
		.USE_M0_ARPROT                     (1),
		.USE_S0_ARCACHE                    (1),
		.USE_S0_ARQOS                      (1),
		.USE_S0_RID                        (1),
		.USE_S0_RRESP                      (1),
		.USE_M0_RRESP                      (1),
		.USE_S0_RLAST                      (1),
		.M0_ID_WIDTH                       (5),
		.DATA_WIDTH                        (128),
		.S0_ID_WIDTH                       (1),
		.M0_ADDR_WIDTH                     (32),
		.S0_WRITE_ADDR_USER_WIDTH          (23),
		.S0_READ_ADDR_USER_WIDTH           (23),
		.M0_WRITE_ADDR_USER_WIDTH          (23),
		.M0_READ_ADDR_USER_WIDTH           (23),
		.S0_WRITE_DATA_USER_WIDTH          (1),
		.S0_WRITE_RESPONSE_DATA_USER_WIDTH (1),
		.S0_READ_DATA_USER_WIDTH           (1),
		.M0_WRITE_DATA_USER_WIDTH          (1),
		.M0_WRITE_RESPONSE_DATA_USER_WIDTH (1),
		.M0_READ_DATA_USER_WIDTH           (1),
		.S0_ADDR_WIDTH                     (32),
		.USE_S0_AWUSER                     (1),
		.USE_S0_ARUSER                     (1),
		.USE_S0_WUSER                      (1),
		.USE_S0_RUSER                      (1),
		.USE_S0_BUSER                      (1),
		.USE_M0_AWUSER                     (1),
		.USE_M0_ARUSER                     (1),
		.USE_M0_WUSER                      (0),
		.USE_M0_RUSER                      (0),
		.USE_M0_BUSER                      (0),
		.M0_AXI_VERSION                    ("AXI4"),
		.M0_BURST_LENGTH_WIDTH             (8),
		.S0_BURST_LENGTH_WIDTH             (8),
		.M0_LOCK_WIDTH                     (1),
		.S0_LOCK_WIDTH                     (1),
		.S0_AXI_VERSION                    ("AXI4"),
		.ACE_LITE_SUPPORT                  (0)
	) agilex_hps_f2h_axi_slave_translator (
		.aclk        (clk_100_out_clk_clk),                                       //   input,    width = 1,       clk.clk
		.aresetn     (~msgdma_mm2s_reset_n_reset_bridge_in_reset_reset),          //   input,    width = 1, clk_reset.reset_n
		.m0_awid     (agilex_hps_f2h_axi_slave_awid),                             //  output,    width = 5,        m0.awid
		.m0_awaddr   (agilex_hps_f2h_axi_slave_awaddr),                           //  output,   width = 32,          .awaddr
		.m0_awlen    (agilex_hps_f2h_axi_slave_awlen),                            //  output,    width = 8,          .awlen
		.m0_awsize   (agilex_hps_f2h_axi_slave_awsize),                           //  output,    width = 3,          .awsize
		.m0_awburst  (agilex_hps_f2h_axi_slave_awburst),                          //  output,    width = 2,          .awburst
		.m0_awlock   (agilex_hps_f2h_axi_slave_awlock),                           //  output,    width = 1,          .awlock
		.m0_awcache  (agilex_hps_f2h_axi_slave_awcache),                          //  output,    width = 4,          .awcache
		.m0_awprot   (agilex_hps_f2h_axi_slave_awprot),                           //  output,    width = 3,          .awprot
		.m0_awuser   (agilex_hps_f2h_axi_slave_awuser),                           //  output,   width = 23,          .awuser
		.m0_awqos    (agilex_hps_f2h_axi_slave_awqos),                            //  output,    width = 4,          .awqos
		.m0_awvalid  (agilex_hps_f2h_axi_slave_awvalid),                          //  output,    width = 1,          .awvalid
		.m0_awready  (agilex_hps_f2h_axi_slave_awready),                          //   input,    width = 1,          .awready
		.m0_wdata    (agilex_hps_f2h_axi_slave_wdata),                            //  output,  width = 128,          .wdata
		.m0_wstrb    (agilex_hps_f2h_axi_slave_wstrb),                            //  output,   width = 16,          .wstrb
		.m0_wlast    (agilex_hps_f2h_axi_slave_wlast),                            //  output,    width = 1,          .wlast
		.m0_wvalid   (agilex_hps_f2h_axi_slave_wvalid),                           //  output,    width = 1,          .wvalid
		.m0_wready   (agilex_hps_f2h_axi_slave_wready),                           //   input,    width = 1,          .wready
		.m0_bid      (agilex_hps_f2h_axi_slave_bid),                              //   input,    width = 5,          .bid
		.m0_bresp    (agilex_hps_f2h_axi_slave_bresp),                            //   input,    width = 2,          .bresp
		.m0_bvalid   (agilex_hps_f2h_axi_slave_bvalid),                           //   input,    width = 1,          .bvalid
		.m0_bready   (agilex_hps_f2h_axi_slave_bready),                           //  output,    width = 1,          .bready
		.m0_arid     (agilex_hps_f2h_axi_slave_arid),                             //  output,    width = 5,          .arid
		.m0_araddr   (agilex_hps_f2h_axi_slave_araddr),                           //  output,   width = 32,          .araddr
		.m0_arlen    (agilex_hps_f2h_axi_slave_arlen),                            //  output,    width = 8,          .arlen
		.m0_arsize   (agilex_hps_f2h_axi_slave_arsize),                           //  output,    width = 3,          .arsize
		.m0_arburst  (agilex_hps_f2h_axi_slave_arburst),                          //  output,    width = 2,          .arburst
		.m0_arlock   (agilex_hps_f2h_axi_slave_arlock),                           //  output,    width = 1,          .arlock
		.m0_arcache  (agilex_hps_f2h_axi_slave_arcache),                          //  output,    width = 4,          .arcache
		.m0_arprot   (agilex_hps_f2h_axi_slave_arprot),                           //  output,    width = 3,          .arprot
		.m0_aruser   (agilex_hps_f2h_axi_slave_aruser),                           //  output,   width = 23,          .aruser
		.m0_arqos    (agilex_hps_f2h_axi_slave_arqos),                            //  output,    width = 4,          .arqos
		.m0_arvalid  (agilex_hps_f2h_axi_slave_arvalid),                          //  output,    width = 1,          .arvalid
		.m0_arready  (agilex_hps_f2h_axi_slave_arready),                          //   input,    width = 1,          .arready
		.m0_rid      (agilex_hps_f2h_axi_slave_rid),                              //   input,    width = 5,          .rid
		.m0_rdata    (agilex_hps_f2h_axi_slave_rdata),                            //   input,  width = 128,          .rdata
		.m0_rresp    (agilex_hps_f2h_axi_slave_rresp),                            //   input,    width = 2,          .rresp
		.m0_rlast    (agilex_hps_f2h_axi_slave_rlast),                            //   input,    width = 1,          .rlast
		.m0_rvalid   (agilex_hps_f2h_axi_slave_rvalid),                           //   input,    width = 1,          .rvalid
		.m0_rready   (agilex_hps_f2h_axi_slave_rready),                           //  output,    width = 1,          .rready
		.s0_awid     (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awid),     //   input,    width = 1,        s0.awid
		.s0_awaddr   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awaddr),   //   input,   width = 32,          .awaddr
		.s0_awlen    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awlen),    //   input,    width = 8,          .awlen
		.s0_awsize   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awsize),   //   input,    width = 3,          .awsize
		.s0_awburst  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awburst),  //   input,    width = 2,          .awburst
		.s0_awlock   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awlock),   //   input,    width = 1,          .awlock
		.s0_awcache  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awcache),  //   input,    width = 4,          .awcache
		.s0_awprot   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awprot),   //   input,    width = 3,          .awprot
		.s0_awuser   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awuser),   //   input,   width = 23,          .awuser
		.s0_awqos    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awqos),    //   input,    width = 4,          .awqos
		.s0_awregion (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awregion), //   input,    width = 4,          .awregion
		.s0_awvalid  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awvalid),  //   input,    width = 1,          .awvalid
		.s0_awready  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awready),  //  output,    width = 1,          .awready
		.s0_wdata    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_wdata),    //   input,  width = 128,          .wdata
		.s0_wstrb    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_wstrb),    //   input,   width = 16,          .wstrb
		.s0_wlast    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_wlast),    //   input,    width = 1,          .wlast
		.s0_wvalid   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_wvalid),   //   input,    width = 1,          .wvalid
		.s0_wuser    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_wuser),    //   input,    width = 1,          .wuser
		.s0_wready   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_wready),   //  output,    width = 1,          .wready
		.s0_bid      (agilex_hps_f2h_axi_slave_agent_altera_axi_master_bid),      //  output,    width = 1,          .bid
		.s0_bresp    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_bresp),    //  output,    width = 2,          .bresp
		.s0_buser    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_buser),    //  output,    width = 1,          .buser
		.s0_bvalid   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_bvalid),   //  output,    width = 1,          .bvalid
		.s0_bready   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_bready),   //   input,    width = 1,          .bready
		.s0_arid     (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arid),     //   input,    width = 1,          .arid
		.s0_araddr   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_araddr),   //   input,   width = 32,          .araddr
		.s0_arlen    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arlen),    //   input,    width = 8,          .arlen
		.s0_arsize   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arsize),   //   input,    width = 3,          .arsize
		.s0_arburst  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arburst),  //   input,    width = 2,          .arburst
		.s0_arlock   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arlock),   //   input,    width = 1,          .arlock
		.s0_arcache  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arcache),  //   input,    width = 4,          .arcache
		.s0_arprot   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arprot),   //   input,    width = 3,          .arprot
		.s0_aruser   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_aruser),   //   input,   width = 23,          .aruser
		.s0_arqos    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arqos),    //   input,    width = 4,          .arqos
		.s0_arregion (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arregion), //   input,    width = 4,          .arregion
		.s0_arvalid  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arvalid),  //   input,    width = 1,          .arvalid
		.s0_arready  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arready),  //  output,    width = 1,          .arready
		.s0_rid      (agilex_hps_f2h_axi_slave_agent_altera_axi_master_rid),      //  output,    width = 1,          .rid
		.s0_rdata    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_rdata),    //  output,  width = 128,          .rdata
		.s0_rresp    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_rresp),    //  output,    width = 2,          .rresp
		.s0_rlast    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_rlast),    //  output,    width = 1,          .rlast
		.s0_rvalid   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_rvalid),   //  output,    width = 1,          .rvalid
		.s0_rready   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_rready),   //   input,    width = 1,          .rready
		.s0_ruser    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_ruser),    //  output,    width = 1,          .ruser
		.m0_awregion (),                                                          // (terminated),                         
		.m0_wuser    (),                                                          // (terminated),                         
		.m0_buser    (1'b0),                                                      // (terminated),                         
		.m0_arregion (),                                                          // (terminated),                         
		.m0_ruser    (1'b0),                                                      // (terminated),                         
		.s0_wid      (1'b0),                                                      // (terminated),                         
		.s0_ardomain (2'b00),                                                     // (terminated),                         
		.s0_arsnoop  (4'b0000),                                                   // (terminated),                         
		.s0_arbar    (2'b00),                                                     // (terminated),                         
		.s0_awdomain (2'b00),                                                     // (terminated),                         
		.s0_awsnoop  (3'b000),                                                    // (terminated),                         
		.s0_awbar    (2'b00),                                                     // (terminated),                         
		.s0_awunique (1'b0),                                                      // (terminated),                         
		.m0_wid      (),                                                          // (terminated),                         
		.m0_ardomain (),                                                          // (terminated),                         
		.m0_arsnoop  (),                                                          // (terminated),                         
		.m0_arbar    (),                                                          // (terminated),                         
		.m0_awdomain (),                                                          // (terminated),                         
		.m0_awsnoop  (),                                                          // (terminated),                         
		.m0_awbar    (),                                                          // (terminated),                         
		.m0_awunique ()                                                           // (terminated),                         
	);

	qsys_top_altera_merlin_master_agent_191_mpbm6tq #(
		.PKT_WUNIQUE               (261),
		.PKT_DOMAIN_H              (260),
		.PKT_DOMAIN_L              (259),
		.PKT_SNOOP_H               (258),
		.PKT_SNOOP_L               (255),
		.PKT_BARRIER_H             (254),
		.PKT_BARRIER_L             (253),
		.PKT_ORI_BURST_SIZE_H      (252),
		.PKT_ORI_BURST_SIZE_L      (250),
		.PKT_RESPONSE_STATUS_H     (249),
		.PKT_RESPONSE_STATUS_L     (248),
		.PKT_QOS_H                 (237),
		.PKT_QOS_L                 (234),
		.PKT_DATA_SIDEBAND_H       (232),
		.PKT_DATA_SIDEBAND_L       (232),
		.PKT_ADDR_SIDEBAND_H       (231),
		.PKT_ADDR_SIDEBAND_L       (209),
		.PKT_BURST_TYPE_H          (208),
		.PKT_BURST_TYPE_L          (207),
		.PKT_CACHE_H               (247),
		.PKT_CACHE_L               (244),
		.PKT_THREAD_ID_H           (240),
		.PKT_THREAD_ID_L           (240),
		.PKT_BURST_SIZE_H          (206),
		.PKT_BURST_SIZE_L          (204),
		.PKT_TRANS_EXCLUSIVE       (181),
		.PKT_TRANS_LOCK            (180),
		.PKT_BEGIN_BURST           (233),
		.PKT_PROTECTION_H          (243),
		.PKT_PROTECTION_L          (241),
		.PKT_BURSTWRAP_H           (203),
		.PKT_BURSTWRAP_L           (195),
		.PKT_BYTE_CNT_H            (194),
		.PKT_BYTE_CNT_L            (182),
		.PKT_ADDR_H                (175),
		.PKT_ADDR_L                (144),
		.PKT_TRANS_COMPRESSED_READ (176),
		.PKT_TRANS_POSTED          (177),
		.PKT_TRANS_WRITE           (178),
		.PKT_TRANS_READ            (179),
		.PKT_DATA_H                (127),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (143),
		.PKT_BYTEEN_L              (128),
		.PKT_SRC_ID_H              (238),
		.PKT_SRC_ID_L              (238),
		.PKT_DEST_ID_H             (239),
		.PKT_DEST_ID_L             (239),
		.ST_DATA_W                 (262),
		.ST_CHANNEL_W              (2),
		.AV_BURSTCOUNT_W           (5),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (511),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0),
		.DOMAIN_VALUE              (3),
		.BARRIER_VALUE             (0),
		.SNOOP_VALUE               (0),
		.WUNIQUE_VALUE             (0),
		.SYNC_RESET                (1)
	) msgdma_mm2s_mm_read_agent (
		.clk                   (clk_100_out_clk_clk),                                                    //   input,    width = 1,       clk.clk
		.reset                 (msgdma_mm2s_reset_n_reset_bridge_in_reset_reset),                        //   input,    width = 1, clk_reset.reset
		.av_address            (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_address),       //   input,   width = 32,        av.address
		.av_write              (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_write),         //   input,    width = 1,          .write
		.av_read               (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_read),          //   input,    width = 1,          .read
		.av_writedata          (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_writedata),     //   input,  width = 128,          .writedata
		.av_readdata           (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_readdata),      //  output,  width = 128,          .readdata
		.av_waitrequest        (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_waitrequest),   //  output,    width = 1,          .waitrequest
		.av_readdatavalid      (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_readdatavalid), //  output,    width = 1,          .readdatavalid
		.av_byteenable         (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_byteenable),    //   input,   width = 16,          .byteenable
		.av_burstcount         (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_burstcount),    //   input,    width = 5,          .burstcount
		.av_debugaccess        (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_debugaccess),   //   input,    width = 1,          .debugaccess
		.av_lock               (msgdma_mm2s_mm_read_translator_avalon_universal_master_0_lock),          //   input,    width = 1,          .lock
		.cp_valid              (msgdma_mm2s_mm_read_agent_cp_valid),                                     //  output,    width = 1,        cp.valid
		.cp_data               (msgdma_mm2s_mm_read_agent_cp_data),                                      //  output,  width = 262,          .data
		.cp_startofpacket      (msgdma_mm2s_mm_read_agent_cp_startofpacket),                             //  output,    width = 1,          .startofpacket
		.cp_endofpacket        (msgdma_mm2s_mm_read_agent_cp_endofpacket),                               //  output,    width = 1,          .endofpacket
		.cp_ready              (msgdma_mm2s_mm_read_agent_cp_ready),                                     //   input,    width = 1,          .ready
		.rp_valid              (msgdma_mm2s_mm_read_limiter_rsp_src_valid),                              //   input,    width = 1,        rp.valid
		.rp_data               (msgdma_mm2s_mm_read_limiter_rsp_src_data),                               //   input,  width = 262,          .data
		.rp_channel            (msgdma_mm2s_mm_read_limiter_rsp_src_channel),                            //   input,    width = 2,          .channel
		.rp_startofpacket      (msgdma_mm2s_mm_read_limiter_rsp_src_startofpacket),                      //   input,    width = 1,          .startofpacket
		.rp_endofpacket        (msgdma_mm2s_mm_read_limiter_rsp_src_endofpacket),                        //   input,    width = 1,          .endofpacket
		.rp_ready              (msgdma_mm2s_mm_read_limiter_rsp_src_ready),                              //  output,    width = 1,          .ready
		.av_response           (),                                                                       // (terminated),                         
		.av_writeresponsevalid ()                                                                        // (terminated),                         
	);

	qsys_top_altera_merlin_axi_slave_ni_1941_5n2xbba #(
		.PKT_QOS_H                   (237),
		.PKT_QOS_L                   (234),
		.PKT_THREAD_ID_H             (240),
		.PKT_THREAD_ID_L             (240),
		.PKT_RESPONSE_STATUS_H       (249),
		.PKT_RESPONSE_STATUS_L       (248),
		.PKT_BEGIN_BURST             (233),
		.PKT_CACHE_H                 (247),
		.PKT_CACHE_L                 (244),
		.PKT_DATA_SIDEBAND_H         (232),
		.PKT_DATA_SIDEBAND_L         (232),
		.PKT_ADDR_SIDEBAND_H         (231),
		.PKT_ADDR_SIDEBAND_L         (209),
		.PKT_BURST_TYPE_H            (208),
		.PKT_BURST_TYPE_L            (207),
		.PKT_PROTECTION_H            (243),
		.PKT_PROTECTION_L            (241),
		.PKT_BURST_SIZE_H            (206),
		.PKT_BURST_SIZE_L            (204),
		.PKT_BURSTWRAP_H             (203),
		.PKT_BURSTWRAP_L             (195),
		.PKT_BYTE_CNT_H              (194),
		.PKT_BYTE_CNT_L              (182),
		.PKT_ADDR_H                  (175),
		.PKT_ADDR_L                  (144),
		.PKT_TRANS_EXCLUSIVE         (181),
		.PKT_TRANS_LOCK              (180),
		.PKT_TRANS_COMPRESSED_READ   (176),
		.PKT_TRANS_POSTED            (177),
		.PKT_TRANS_WRITE             (178),
		.PKT_TRANS_READ              (179),
		.PKT_DATA_H                  (127),
		.PKT_DATA_L                  (0),
		.PKT_BYTEEN_H                (143),
		.PKT_BYTEEN_L                (128),
		.PKT_SRC_ID_H                (238),
		.PKT_SRC_ID_L                (238),
		.PKT_DEST_ID_H               (239),
		.PKT_DEST_ID_L               (239),
		.PKT_ORI_BURST_SIZE_L        (250),
		.PKT_ORI_BURST_SIZE_H        (252),
		.PKT_DOMAIN_L                (259),
		.PKT_DOMAIN_H                (260),
		.PKT_SNOOP_L                 (255),
		.PKT_SNOOP_H                 (258),
		.PKT_BARRIER_L               (253),
		.PKT_BARRIER_H               (254),
		.PKT_WUNIQUE                 (261),
		.ADDR_USER_WIDTH             (23),
		.DATA_USER_WIDTH             (1),
		.ST_DATA_W                   (262),
		.ADDR_WIDTH                  (32),
		.RDATA_WIDTH                 (128),
		.WDATA_WIDTH                 (128),
		.ST_CHANNEL_W                (2),
		.AXI_SLAVE_ID_W              (1),
		.ACE_LITE_SUPPORT            (0),
		.PASS_ID_TO_SLAVE            (0),
		.AXI_VERSION                 ("AXI4"),
		.WRITE_ACCEPTANCE_CAPABILITY (8),
		.READ_ACCEPTANCE_CAPABILITY  (8),
		.SYNC_RESET                  (1),
		.USE_MEMORY_BLOCKS           (0)
	) agilex_hps_f2h_axi_slave_agent (
		.aclk                   (clk_100_out_clk_clk),                                       //   input,    width = 1,        clock_sink.clk
		.aresetn                (~msgdma_mm2s_reset_n_reset_bridge_in_reset_reset),          //   input,    width = 1,        reset_sink.reset_n
		.read_cp_valid          (cmd_mux_001_src_valid),                                     //   input,    width = 1,           read_cp.valid
		.read_cp_ready          (cmd_mux_001_src_ready),                                     //  output,    width = 1,                  .ready
		.read_cp_data           (cmd_mux_001_src_data),                                      //   input,  width = 262,                  .data
		.read_cp_channel        (cmd_mux_001_src_channel),                                   //   input,    width = 2,                  .channel
		.read_cp_startofpacket  (cmd_mux_001_src_startofpacket),                             //   input,    width = 1,                  .startofpacket
		.read_cp_endofpacket    (cmd_mux_001_src_endofpacket),                               //   input,    width = 1,                  .endofpacket
		.write_cp_ready         (cmd_mux_src_ready),                                         //  output,    width = 1,          write_cp.ready
		.write_cp_valid         (cmd_mux_src_valid),                                         //   input,    width = 1,                  .valid
		.write_cp_data          (cmd_mux_src_data),                                          //   input,  width = 262,                  .data
		.write_cp_channel       (cmd_mux_src_channel),                                       //   input,    width = 2,                  .channel
		.write_cp_startofpacket (cmd_mux_src_startofpacket),                                 //   input,    width = 1,                  .startofpacket
		.write_cp_endofpacket   (cmd_mux_src_endofpacket),                                   //   input,    width = 1,                  .endofpacket
		.read_rp_ready          (agilex_hps_f2h_axi_slave_agent_read_rp_ready),              //   input,    width = 1,           read_rp.ready
		.read_rp_valid          (agilex_hps_f2h_axi_slave_agent_read_rp_valid),              //  output,    width = 1,                  .valid
		.read_rp_data           (agilex_hps_f2h_axi_slave_agent_read_rp_data),               //  output,  width = 262,                  .data
		.read_rp_startofpacket  (agilex_hps_f2h_axi_slave_agent_read_rp_startofpacket),      //  output,    width = 1,                  .startofpacket
		.read_rp_endofpacket    (agilex_hps_f2h_axi_slave_agent_read_rp_endofpacket),        //  output,    width = 1,                  .endofpacket
		.write_rp_ready         (agilex_hps_f2h_axi_slave_agent_write_rp_ready),             //   input,    width = 1,          write_rp.ready
		.write_rp_valid         (agilex_hps_f2h_axi_slave_agent_write_rp_valid),             //  output,    width = 1,                  .valid
		.write_rp_data          (agilex_hps_f2h_axi_slave_agent_write_rp_data),              //  output,  width = 262,                  .data
		.write_rp_startofpacket (agilex_hps_f2h_axi_slave_agent_write_rp_startofpacket),     //  output,    width = 1,                  .startofpacket
		.write_rp_endofpacket   (agilex_hps_f2h_axi_slave_agent_write_rp_endofpacket),       //  output,    width = 1,                  .endofpacket
		.awid                   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awid),     //  output,    width = 1, altera_axi_master.awid
		.awaddr                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awaddr),   //  output,   width = 32,                  .awaddr
		.awlen                  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awlen),    //  output,    width = 8,                  .awlen
		.awsize                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awsize),   //  output,    width = 3,                  .awsize
		.awburst                (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awburst),  //  output,    width = 2,                  .awburst
		.awlock                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awlock),   //  output,    width = 1,                  .awlock
		.awcache                (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awcache),  //  output,    width = 4,                  .awcache
		.awprot                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awprot),   //  output,    width = 3,                  .awprot
		.awuser                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awuser),   //  output,   width = 23,                  .awuser
		.awvalid                (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awvalid),  //  output,    width = 1,                  .awvalid
		.awready                (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awready),  //   input,    width = 1,                  .awready
		.wdata                  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_wdata),    //  output,  width = 128,                  .wdata
		.wstrb                  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_wstrb),    //  output,   width = 16,                  .wstrb
		.wlast                  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_wlast),    //  output,    width = 1,                  .wlast
		.wvalid                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_wvalid),   //  output,    width = 1,                  .wvalid
		.wready                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_wready),   //   input,    width = 1,                  .wready
		.bid                    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_bid),      //   input,    width = 1,                  .bid
		.bresp                  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_bresp),    //   input,    width = 2,                  .bresp
		.bvalid                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_bvalid),   //   input,    width = 1,                  .bvalid
		.bready                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_bready),   //  output,    width = 1,                  .bready
		.arid                   (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arid),     //  output,    width = 1,                  .arid
		.araddr                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_araddr),   //  output,   width = 32,                  .araddr
		.arlen                  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arlen),    //  output,    width = 8,                  .arlen
		.arsize                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arsize),   //  output,    width = 3,                  .arsize
		.arburst                (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arburst),  //  output,    width = 2,                  .arburst
		.arlock                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arlock),   //  output,    width = 1,                  .arlock
		.arcache                (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arcache),  //  output,    width = 4,                  .arcache
		.arprot                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arprot),   //  output,    width = 3,                  .arprot
		.aruser                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_aruser),   //  output,   width = 23,                  .aruser
		.arvalid                (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arvalid),  //  output,    width = 1,                  .arvalid
		.arready                (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arready),  //   input,    width = 1,                  .arready
		.rid                    (agilex_hps_f2h_axi_slave_agent_altera_axi_master_rid),      //   input,    width = 1,                  .rid
		.rdata                  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_rdata),    //   input,  width = 128,                  .rdata
		.rresp                  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_rresp),    //   input,    width = 2,                  .rresp
		.rlast                  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_rlast),    //   input,    width = 1,                  .rlast
		.rvalid                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_rvalid),   //   input,    width = 1,                  .rvalid
		.rready                 (agilex_hps_f2h_axi_slave_agent_altera_axi_master_rready),   //  output,    width = 1,                  .rready
		.wuser                  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_wuser),    //  output,    width = 1,                  .wuser
		.awqos                  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awqos),    //  output,    width = 4,                  .awqos
		.awregion               (agilex_hps_f2h_axi_slave_agent_altera_axi_master_awregion), //  output,    width = 4,                  .awregion
		.ruser                  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_ruser),    //   input,    width = 1,                  .ruser
		.buser                  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_buser),    //   input,    width = 1,                  .buser
		.arqos                  (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arqos),    //  output,    width = 4,                  .arqos
		.arregion               (agilex_hps_f2h_axi_slave_agent_altera_axi_master_arregion), //  output,    width = 4,                  .arregion
		.wid                    (),                                                          // (terminated),                                 
		.arsnoop                (),                                                          // (terminated),                                 
		.ardomain               (),                                                          // (terminated),                                 
		.arbar                  (),                                                          // (terminated),                                 
		.awsnoop                (),                                                          // (terminated),                                 
		.awdomain               (),                                                          // (terminated),                                 
		.awbar                  (),                                                          // (terminated),                                 
		.awunique               ()                                                           // (terminated),                                 
	);

	qsys_top_altera_merlin_router_1921_nf2zqzy router (
		.sink_ready         (msgdma_mm2s_mm_read_agent_cp_ready),              //  output,    width = 1,      sink.ready
		.sink_valid         (msgdma_mm2s_mm_read_agent_cp_valid),              //   input,    width = 1,          .valid
		.sink_data          (msgdma_mm2s_mm_read_agent_cp_data),               //   input,  width = 262,          .data
		.sink_startofpacket (msgdma_mm2s_mm_read_agent_cp_startofpacket),      //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (msgdma_mm2s_mm_read_agent_cp_endofpacket),        //   input,    width = 1,          .endofpacket
		.clk                (clk_100_out_clk_clk),                             //   input,    width = 1,       clk.clk
		.reset              (msgdma_mm2s_reset_n_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready          (router_src_ready),                                //   input,    width = 1,       src.ready
		.src_valid          (router_src_valid),                                //  output,    width = 1,          .valid
		.src_data           (router_src_data),                                 //  output,  width = 262,          .data
		.src_channel        (router_src_channel),                              //  output,    width = 2,          .channel
		.src_startofpacket  (router_src_startofpacket),                        //  output,    width = 1,          .startofpacket
		.src_endofpacket    (router_src_endofpacket)                           //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_router_1921_kdwuqsq router_001 (
		.sink_ready         (agilex_hps_f2h_axi_slave_agent_write_rp_ready),         //  output,    width = 1,      sink.ready
		.sink_valid         (agilex_hps_f2h_axi_slave_agent_write_rp_valid),         //   input,    width = 1,          .valid
		.sink_data          (agilex_hps_f2h_axi_slave_agent_write_rp_data),          //   input,  width = 262,          .data
		.sink_startofpacket (agilex_hps_f2h_axi_slave_agent_write_rp_startofpacket), //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (agilex_hps_f2h_axi_slave_agent_write_rp_endofpacket),   //   input,    width = 1,          .endofpacket
		.clk                (clk_100_out_clk_clk),                                   //   input,    width = 1,       clk.clk
		.reset              (msgdma_mm2s_reset_n_reset_bridge_in_reset_reset),       //   input,    width = 1, clk_reset.reset
		.src_ready          (router_001_src_ready),                                  //   input,    width = 1,       src.ready
		.src_valid          (router_001_src_valid),                                  //  output,    width = 1,          .valid
		.src_data           (router_001_src_data),                                   //  output,  width = 262,          .data
		.src_channel        (router_001_src_channel),                                //  output,    width = 2,          .channel
		.src_startofpacket  (router_001_src_startofpacket),                          //  output,    width = 1,          .startofpacket
		.src_endofpacket    (router_001_src_endofpacket)                             //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_router_1921_kdwuqsq router_002 (
		.sink_ready         (agilex_hps_f2h_axi_slave_agent_read_rp_ready),         //  output,    width = 1,      sink.ready
		.sink_valid         (agilex_hps_f2h_axi_slave_agent_read_rp_valid),         //   input,    width = 1,          .valid
		.sink_data          (agilex_hps_f2h_axi_slave_agent_read_rp_data),          //   input,  width = 262,          .data
		.sink_startofpacket (agilex_hps_f2h_axi_slave_agent_read_rp_startofpacket), //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (agilex_hps_f2h_axi_slave_agent_read_rp_endofpacket),   //   input,    width = 1,          .endofpacket
		.clk                (clk_100_out_clk_clk),                                  //   input,    width = 1,       clk.clk
		.reset              (msgdma_mm2s_reset_n_reset_bridge_in_reset_reset),      //   input,    width = 1, clk_reset.reset
		.src_ready          (router_002_src_ready),                                 //   input,    width = 1,       src.ready
		.src_valid          (router_002_src_valid),                                 //  output,    width = 1,          .valid
		.src_data           (router_002_src_data),                                  //  output,  width = 262,          .data
		.src_channel        (router_002_src_channel),                               //  output,    width = 2,          .channel
		.src_startofpacket  (router_002_src_startofpacket),                         //  output,    width = 1,          .startofpacket
		.src_endofpacket    (router_002_src_endofpacket)                            //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_traffic_limiter_191_6blplji #(
		.SYNC_RESET                (1),
		.PKT_DEST_ID_H             (239),
		.PKT_DEST_ID_L             (239),
		.PKT_SRC_ID_H              (238),
		.PKT_SRC_ID_L              (238),
		.PKT_BYTE_CNT_H            (194),
		.PKT_BYTE_CNT_L            (182),
		.PKT_BYTEEN_H              (143),
		.PKT_BYTEEN_L              (128),
		.PKT_TRANS_POSTED          (177),
		.PKT_TRANS_WRITE           (178),
		.MAX_OUTSTANDING_RESPONSES (17),
		.PIPELINED                 (0),
		.ST_DATA_W                 (262),
		.ST_CHANNEL_W              (2),
		.VALID_WIDTH               (2),
		.ENFORCE_ORDER             (1),
		.PREVENT_HAZARDS           (1),
		.SUPPORTS_POSTED_WRITES    (1),
		.SUPPORTS_NONPOSTED_WRITES (0),
		.REORDER                   (0)
	) msgdma_mm2s_mm_read_limiter (
		.clk                    (clk_100_out_clk_clk),                               //   input,    width = 1,       clk.clk
		.reset                  (msgdma_mm2s_reset_n_reset_bridge_in_reset_reset),   //   input,    width = 1, clk_reset.reset
		.cmd_sink_ready         (router_src_ready),                                  //  output,    width = 1,  cmd_sink.ready
		.cmd_sink_valid         (router_src_valid),                                  //   input,    width = 1,          .valid
		.cmd_sink_data          (router_src_data),                                   //   input,  width = 262,          .data
		.cmd_sink_channel       (router_src_channel),                                //   input,    width = 2,          .channel
		.cmd_sink_startofpacket (router_src_startofpacket),                          //   input,    width = 1,          .startofpacket
		.cmd_sink_endofpacket   (router_src_endofpacket),                            //   input,    width = 1,          .endofpacket
		.cmd_src_ready          (msgdma_mm2s_mm_read_limiter_cmd_src_ready),         //   input,    width = 1,   cmd_src.ready
		.cmd_src_data           (msgdma_mm2s_mm_read_limiter_cmd_src_data),          //  output,  width = 262,          .data
		.cmd_src_channel        (msgdma_mm2s_mm_read_limiter_cmd_src_channel),       //  output,    width = 2,          .channel
		.cmd_src_startofpacket  (msgdma_mm2s_mm_read_limiter_cmd_src_startofpacket), //  output,    width = 1,          .startofpacket
		.cmd_src_endofpacket    (msgdma_mm2s_mm_read_limiter_cmd_src_endofpacket),   //  output,    width = 1,          .endofpacket
		.rsp_sink_ready         (rsp_mux_src_ready),                                 //  output,    width = 1,  rsp_sink.ready
		.rsp_sink_valid         (rsp_mux_src_valid),                                 //   input,    width = 1,          .valid
		.rsp_sink_channel       (rsp_mux_src_channel),                               //   input,    width = 2,          .channel
		.rsp_sink_data          (rsp_mux_src_data),                                  //   input,  width = 262,          .data
		.rsp_sink_startofpacket (rsp_mux_src_startofpacket),                         //   input,    width = 1,          .startofpacket
		.rsp_sink_endofpacket   (rsp_mux_src_endofpacket),                           //   input,    width = 1,          .endofpacket
		.rsp_src_ready          (msgdma_mm2s_mm_read_limiter_rsp_src_ready),         //   input,    width = 1,   rsp_src.ready
		.rsp_src_valid          (msgdma_mm2s_mm_read_limiter_rsp_src_valid),         //  output,    width = 1,          .valid
		.rsp_src_data           (msgdma_mm2s_mm_read_limiter_rsp_src_data),          //  output,  width = 262,          .data
		.rsp_src_channel        (msgdma_mm2s_mm_read_limiter_rsp_src_channel),       //  output,    width = 2,          .channel
		.rsp_src_startofpacket  (msgdma_mm2s_mm_read_limiter_rsp_src_startofpacket), //  output,    width = 1,          .startofpacket
		.rsp_src_endofpacket    (msgdma_mm2s_mm_read_limiter_rsp_src_endofpacket),   //  output,    width = 1,          .endofpacket
		.cmd_src_valid          (msgdma_mm2s_mm_read_limiter_cmd_valid_data)         //  output,    width = 2, cmd_valid.data
	);

	qsys_top_altera_merlin_demultiplexer_1921_yzrtgpi cmd_demux (
		.clk                (clk_100_out_clk_clk),                               //   input,    width = 1,        clk.clk
		.reset              (msgdma_mm2s_reset_n_reset_bridge_in_reset_reset),   //   input,    width = 1,  clk_reset.reset
		.sink_ready         (msgdma_mm2s_mm_read_limiter_cmd_src_ready),         //  output,    width = 1,       sink.ready
		.sink_channel       (msgdma_mm2s_mm_read_limiter_cmd_src_channel),       //   input,    width = 2,           .channel
		.sink_data          (msgdma_mm2s_mm_read_limiter_cmd_src_data),          //   input,  width = 262,           .data
		.sink_startofpacket (msgdma_mm2s_mm_read_limiter_cmd_src_startofpacket), //   input,    width = 1,           .startofpacket
		.sink_endofpacket   (msgdma_mm2s_mm_read_limiter_cmd_src_endofpacket),   //   input,    width = 1,           .endofpacket
		.sink_valid         (msgdma_mm2s_mm_read_limiter_cmd_valid_data),        //   input,    width = 2, sink_valid.data
		.src0_ready         (cmd_demux_src0_ready),                              //   input,    width = 1,       src0.ready
		.src0_valid         (cmd_demux_src0_valid),                              //  output,    width = 1,           .valid
		.src0_data          (cmd_demux_src0_data),                               //  output,  width = 262,           .data
		.src0_channel       (cmd_demux_src0_channel),                            //  output,    width = 2,           .channel
		.src0_startofpacket (cmd_demux_src0_startofpacket),                      //  output,    width = 1,           .startofpacket
		.src0_endofpacket   (cmd_demux_src0_endofpacket),                        //  output,    width = 1,           .endofpacket
		.src1_ready         (cmd_demux_src1_ready),                              //   input,    width = 1,       src1.ready
		.src1_valid         (cmd_demux_src1_valid),                              //  output,    width = 1,           .valid
		.src1_data          (cmd_demux_src1_data),                               //  output,  width = 262,           .data
		.src1_channel       (cmd_demux_src1_channel),                            //  output,    width = 2,           .channel
		.src1_startofpacket (cmd_demux_src1_startofpacket),                      //  output,    width = 1,           .startofpacket
		.src1_endofpacket   (cmd_demux_src1_endofpacket)                         //  output,    width = 1,           .endofpacket
	);

	qsys_top_altera_merlin_multiplexer_1921_6knjf5i cmd_mux (
		.clk                 (clk_100_out_clk_clk),                             //   input,    width = 1,       clk.clk
		.reset               (msgdma_mm2s_reset_n_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready           (cmd_mux_src_ready),                               //   input,    width = 1,       src.ready
		.src_valid           (cmd_mux_src_valid),                               //  output,    width = 1,          .valid
		.src_data            (cmd_mux_src_data),                                //  output,  width = 262,          .data
		.src_channel         (cmd_mux_src_channel),                             //  output,    width = 2,          .channel
		.src_startofpacket   (cmd_mux_src_startofpacket),                       //  output,    width = 1,          .startofpacket
		.src_endofpacket     (cmd_mux_src_endofpacket),                         //  output,    width = 1,          .endofpacket
		.sink0_ready         (cmd_demux_src0_ready),                            //  output,    width = 1,     sink0.ready
		.sink0_valid         (cmd_demux_src0_valid),                            //   input,    width = 1,          .valid
		.sink0_channel       (cmd_demux_src0_channel),                          //   input,    width = 2,          .channel
		.sink0_data          (cmd_demux_src0_data),                             //   input,  width = 262,          .data
		.sink0_startofpacket (cmd_demux_src0_startofpacket),                    //   input,    width = 1,          .startofpacket
		.sink0_endofpacket   (cmd_demux_src0_endofpacket)                       //   input,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_multiplexer_1921_6knjf5i cmd_mux_001 (
		.clk                 (clk_100_out_clk_clk),                             //   input,    width = 1,       clk.clk
		.reset               (msgdma_mm2s_reset_n_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready           (cmd_mux_001_src_ready),                           //   input,    width = 1,       src.ready
		.src_valid           (cmd_mux_001_src_valid),                           //  output,    width = 1,          .valid
		.src_data            (cmd_mux_001_src_data),                            //  output,  width = 262,          .data
		.src_channel         (cmd_mux_001_src_channel),                         //  output,    width = 2,          .channel
		.src_startofpacket   (cmd_mux_001_src_startofpacket),                   //  output,    width = 1,          .startofpacket
		.src_endofpacket     (cmd_mux_001_src_endofpacket),                     //  output,    width = 1,          .endofpacket
		.sink0_ready         (cmd_demux_src1_ready),                            //  output,    width = 1,     sink0.ready
		.sink0_valid         (cmd_demux_src1_valid),                            //   input,    width = 1,          .valid
		.sink0_channel       (cmd_demux_src1_channel),                          //   input,    width = 2,          .channel
		.sink0_data          (cmd_demux_src1_data),                             //   input,  width = 262,          .data
		.sink0_startofpacket (cmd_demux_src1_startofpacket),                    //   input,    width = 1,          .startofpacket
		.sink0_endofpacket   (cmd_demux_src1_endofpacket)                       //   input,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_demultiplexer_1921_ow7izai rsp_demux (
		.clk                (clk_100_out_clk_clk),                             //   input,    width = 1,       clk.clk
		.reset              (msgdma_mm2s_reset_n_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.sink_ready         (router_001_src_ready),                            //  output,    width = 1,      sink.ready
		.sink_channel       (router_001_src_channel),                          //   input,    width = 2,          .channel
		.sink_data          (router_001_src_data),                             //   input,  width = 262,          .data
		.sink_startofpacket (router_001_src_startofpacket),                    //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (router_001_src_endofpacket),                      //   input,    width = 1,          .endofpacket
		.sink_valid         (router_001_src_valid),                            //   input,    width = 1,          .valid
		.src0_ready         (rsp_demux_src0_ready),                            //   input,    width = 1,      src0.ready
		.src0_valid         (rsp_demux_src0_valid),                            //  output,    width = 1,          .valid
		.src0_data          (rsp_demux_src0_data),                             //  output,  width = 262,          .data
		.src0_channel       (rsp_demux_src0_channel),                          //  output,    width = 2,          .channel
		.src0_startofpacket (rsp_demux_src0_startofpacket),                    //  output,    width = 1,          .startofpacket
		.src0_endofpacket   (rsp_demux_src0_endofpacket)                       //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_demultiplexer_1921_ow7izai rsp_demux_001 (
		.clk                (clk_100_out_clk_clk),                             //   input,    width = 1,       clk.clk
		.reset              (msgdma_mm2s_reset_n_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.sink_ready         (router_002_src_ready),                            //  output,    width = 1,      sink.ready
		.sink_channel       (router_002_src_channel),                          //   input,    width = 2,          .channel
		.sink_data          (router_002_src_data),                             //   input,  width = 262,          .data
		.sink_startofpacket (router_002_src_startofpacket),                    //   input,    width = 1,          .startofpacket
		.sink_endofpacket   (router_002_src_endofpacket),                      //   input,    width = 1,          .endofpacket
		.sink_valid         (router_002_src_valid),                            //   input,    width = 1,          .valid
		.src0_ready         (rsp_demux_001_src0_ready),                        //   input,    width = 1,      src0.ready
		.src0_valid         (rsp_demux_001_src0_valid),                        //  output,    width = 1,          .valid
		.src0_data          (rsp_demux_001_src0_data),                         //  output,  width = 262,          .data
		.src0_channel       (rsp_demux_001_src0_channel),                      //  output,    width = 2,          .channel
		.src0_startofpacket (rsp_demux_001_src0_startofpacket),                //  output,    width = 1,          .startofpacket
		.src0_endofpacket   (rsp_demux_001_src0_endofpacket)                   //  output,    width = 1,          .endofpacket
	);

	qsys_top_altera_merlin_multiplexer_1921_sioh2ji rsp_mux (
		.clk                 (clk_100_out_clk_clk),                             //   input,    width = 1,       clk.clk
		.reset               (msgdma_mm2s_reset_n_reset_bridge_in_reset_reset), //   input,    width = 1, clk_reset.reset
		.src_ready           (rsp_mux_src_ready),                               //   input,    width = 1,       src.ready
		.src_valid           (rsp_mux_src_valid),                               //  output,    width = 1,          .valid
		.src_data            (rsp_mux_src_data),                                //  output,  width = 262,          .data
		.src_channel         (rsp_mux_src_channel),                             //  output,    width = 2,          .channel
		.src_startofpacket   (rsp_mux_src_startofpacket),                       //  output,    width = 1,          .startofpacket
		.src_endofpacket     (rsp_mux_src_endofpacket),                         //  output,    width = 1,          .endofpacket
		.sink0_ready         (rsp_demux_src0_ready),                            //  output,    width = 1,     sink0.ready
		.sink0_valid         (rsp_demux_src0_valid),                            //   input,    width = 1,          .valid
		.sink0_channel       (rsp_demux_src0_channel),                          //   input,    width = 2,          .channel
		.sink0_data          (rsp_demux_src0_data),                             //   input,  width = 262,          .data
		.sink0_startofpacket (rsp_demux_src0_startofpacket),                    //   input,    width = 1,          .startofpacket
		.sink0_endofpacket   (rsp_demux_src0_endofpacket),                      //   input,    width = 1,          .endofpacket
		.sink1_ready         (rsp_demux_001_src0_ready),                        //  output,    width = 1,     sink1.ready
		.sink1_valid         (rsp_demux_001_src0_valid),                        //   input,    width = 1,          .valid
		.sink1_channel       (rsp_demux_001_src0_channel),                      //   input,    width = 2,          .channel
		.sink1_data          (rsp_demux_001_src0_data),                         //   input,  width = 262,          .data
		.sink1_startofpacket (rsp_demux_001_src0_startofpacket),                //   input,    width = 1,          .startofpacket
		.sink1_endofpacket   (rsp_demux_001_src0_endofpacket)                   //   input,    width = 1,          .endofpacket
	);

endmodule
