	component subsys_periph is
		port (
			ILC_irq_irq                           : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- irq
			button_pio_external_connection_export : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- export
			button_pio_irq_irq                    : out std_logic;                                        -- irq
			dipsw_pio_external_connection_export  : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- export
			dipsw_pio_irq_irq                     : out std_logic;                                        -- irq
			led_pio_external_connection_in_port   : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- in_port
			led_pio_external_connection_out_port  : out std_logic_vector(2 downto 0);                     -- out_port
			pb_cpu_0_s0_waitrequest               : out std_logic;                                        -- waitrequest
			pb_cpu_0_s0_readdata                  : out std_logic_vector(31 downto 0);                    -- readdata
			pb_cpu_0_s0_readdatavalid             : out std_logic;                                        -- readdatavalid
			pb_cpu_0_s0_burstcount                : in  std_logic_vector(0 downto 0)  := (others => 'X'); -- burstcount
			pb_cpu_0_s0_writedata                 : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			pb_cpu_0_s0_address                   : in  std_logic_vector(8 downto 0)  := (others => 'X'); -- address
			pb_cpu_0_s0_write                     : in  std_logic                     := 'X';             -- write
			pb_cpu_0_s0_read                      : in  std_logic                     := 'X';             -- read
			pb_cpu_0_s0_byteenable                : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			pb_cpu_0_s0_debugaccess               : in  std_logic                     := 'X';             -- debugaccess
			clk_clk                               : in  std_logic                     := 'X';             -- clk
			reset_reset_n                         : in  std_logic                     := 'X'              -- reset_n
		);
	end component subsys_periph;

