	eth_tse_0 u0 (
		.ref_clk            (_connected_to_ref_clk_),            //   input,   width = 1,  pcs_ref_clk_clock_connection.clk
		.clk                (_connected_to_clk_),                //   input,   width = 1, control_port_clock_connection.clk
		.reset              (_connected_to_reset_),              //   input,   width = 1,              reset_connection.reset
		.reg_addr           (_connected_to_reg_addr_),           //   input,   width = 5,                  control_port.address
		.reg_data_out       (_connected_to_reg_data_out_),       //  output,  width = 16,                              .readdata
		.reg_rd             (_connected_to_reg_rd_),             //   input,   width = 1,                              .read
		.reg_data_in        (_connected_to_reg_data_in_),        //   input,  width = 16,                              .writedata
		.reg_wr             (_connected_to_reg_wr_),             //   input,   width = 1,                              .write
		.reg_busy           (_connected_to_reg_busy_),           //  output,   width = 1,                              .waitrequest
		.tx_clkena          (_connected_to_tx_clkena_),          //  output,   width = 1,       clock_enable_connection.tx_clkena
		.rx_clkena          (_connected_to_rx_clkena_),          //  output,   width = 1,                              .rx_clkena
		.gmii_rx_dv         (_connected_to_gmii_rx_dv_),         //  output,   width = 1,               gmii_connection.gmii_rx_dv
		.gmii_rx_d          (_connected_to_gmii_rx_d_),          //  output,   width = 8,                              .gmii_rx_d
		.gmii_rx_err        (_connected_to_gmii_rx_err_),        //  output,   width = 1,                              .gmii_rx_err
		.gmii_tx_en         (_connected_to_gmii_tx_en_),         //   input,   width = 1,                              .gmii_tx_en
		.gmii_tx_d          (_connected_to_gmii_tx_d_),          //   input,   width = 8,                              .gmii_tx_d
		.gmii_tx_err        (_connected_to_gmii_tx_err_),        //   input,   width = 1,                              .gmii_tx_err
		.mii_rx_dv          (_connected_to_mii_rx_dv_),          //  output,   width = 1,                mii_connection.mii_rx_dv
		.mii_rx_d           (_connected_to_mii_rx_d_),           //  output,   width = 4,                              .mii_rx_d
		.mii_rx_err         (_connected_to_mii_rx_err_),         //  output,   width = 1,                              .mii_rx_err
		.mii_tx_en          (_connected_to_mii_tx_en_),          //   input,   width = 1,                              .mii_tx_en
		.mii_tx_d           (_connected_to_mii_tx_d_),           //   input,   width = 4,                              .mii_tx_d
		.mii_tx_err         (_connected_to_mii_tx_err_),         //   input,   width = 1,                              .mii_tx_err
		.mii_col            (_connected_to_mii_col_),            //  output,   width = 1,                              .mii_col
		.mii_crs            (_connected_to_mii_crs_),            //  output,   width = 1,                              .mii_crs
		.set_10             (_connected_to_set_10_),             //  output,   width = 1,       sgmii_status_connection.set_10
		.set_1000           (_connected_to_set_1000_),           //  output,   width = 1,                              .set_1000
		.set_100            (_connected_to_set_100_),            //  output,   width = 1,                              .set_100
		.hd_ena             (_connected_to_hd_ena_),             //  output,   width = 1,                              .hd_ena
		.tx_clk             (_connected_to_tx_clk_),             //  output,   width = 1, pcs_transmit_clock_connection.clk
		.rx_clk             (_connected_to_rx_clk_),             //  output,   width = 1,  pcs_receive_clock_connection.clk
		.reset_tx_clk       (_connected_to_reset_tx_clk_),       //   input,   width = 1, pcs_transmit_reset_connection.reset
		.reset_rx_clk       (_connected_to_reset_rx_clk_),       //   input,   width = 1,  pcs_receive_reset_connection.reset
		.led_crs            (_connected_to_led_crs_),            //  output,   width = 1,         status_led_connection.crs
		.led_link           (_connected_to_led_link_),           //  output,   width = 1,                              .link
		.led_panel_link     (_connected_to_led_panel_link_),     //  output,   width = 1,                              .panel_link
		.led_col            (_connected_to_led_col_),            //  output,   width = 1,                              .col
		.led_an             (_connected_to_led_an_),             //  output,   width = 1,                              .an
		.led_char_err       (_connected_to_led_char_err_),       //  output,   width = 1,                              .char_err
		.led_disp_err       (_connected_to_led_disp_err_),       //  output,   width = 1,                              .disp_err
		.rx_recovclkout     (_connected_to_rx_recovclkout_),     //  output,   width = 1,     serdes_control_connection.export
		.lvds_tx_pll_locked (_connected_to_lvds_tx_pll_locked_), //  output,   width = 1,            lvds_tx_pll_locked.export
		.rxp                (_connected_to_rxp_),                //   input,   width = 1,             serial_connection.rxp_0
		.rxn                (_connected_to_rxn_),                //   input,   width = 1,                              .rxn_0
		.txp                (_connected_to_txp_),                //  output,   width = 1,                              .txp_0
		.txn                (_connected_to_txn_)                 //  output,   width = 1,                              .txn_0
	);

