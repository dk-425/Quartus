// eth_tse_0_altera_eth_tse_2110_rbegixy.v

// This file was auto-generated from altera_eth_tse_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 22.4 94

`timescale 1 ps / 1 ps
module eth_tse_0_altera_eth_tse_2110_rbegixy (
		input  wire        ref_clk,            //  pcs_ref_clk_clock_connection.clk
		input  wire        clk,                // control_port_clock_connection.clk
		input  wire        reset,              //              reset_connection.reset
		input  wire [4:0]  reg_addr,           //                  control_port.address
		output wire [15:0] reg_data_out,       //                              .readdata
		input  wire        reg_rd,             //                              .read
		input  wire [15:0] reg_data_in,        //                              .writedata
		input  wire        reg_wr,             //                              .write
		output wire        reg_busy,           //                              .waitrequest
		output wire        tx_clkena,          //       clock_enable_connection.tx_clkena
		output wire        rx_clkena,          //                              .rx_clkena
		output wire        gmii_rx_dv,         //               gmii_connection.gmii_rx_dv
		output wire [7:0]  gmii_rx_d,          //                              .gmii_rx_d
		output wire        gmii_rx_err,        //                              .gmii_rx_err
		input  wire        gmii_tx_en,         //                              .gmii_tx_en
		input  wire [7:0]  gmii_tx_d,          //                              .gmii_tx_d
		input  wire        gmii_tx_err,        //                              .gmii_tx_err
		output wire        mii_rx_dv,          //                mii_connection.mii_rx_dv
		output wire [3:0]  mii_rx_d,           //                              .mii_rx_d
		output wire        mii_rx_err,         //                              .mii_rx_err
		input  wire        mii_tx_en,          //                              .mii_tx_en
		input  wire [3:0]  mii_tx_d,           //                              .mii_tx_d
		input  wire        mii_tx_err,         //                              .mii_tx_err
		output wire        mii_col,            //                              .mii_col
		output wire        mii_crs,            //                              .mii_crs
		output wire        set_10,             //       sgmii_status_connection.set_10
		output wire        set_1000,           //                              .set_1000
		output wire        set_100,            //                              .set_100
		output wire        hd_ena,             //                              .hd_ena
		output wire        tx_clk,             // pcs_transmit_clock_connection.clk
		output wire        rx_clk,             //  pcs_receive_clock_connection.clk
		input  wire        reset_tx_clk,       // pcs_transmit_reset_connection.reset
		input  wire        reset_rx_clk,       //  pcs_receive_reset_connection.reset
		output wire        led_crs,            //         status_led_connection.crs
		output wire        led_link,           //                              .link
		output wire        led_panel_link,     //                              .panel_link
		output wire        led_col,            //                              .col
		output wire        led_an,             //                              .an
		output wire        led_char_err,       //                              .char_err
		output wire        led_disp_err,       //                              .disp_err
		output wire        rx_recovclkout,     //     serdes_control_connection.export
		output wire        lvds_tx_pll_locked, //            lvds_tx_pll_locked.export
		input  wire        rxp,                //             serial_connection.rxp_0
		input  wire        rxn,                //                              .rxn_0
		output wire        txp,                //                              .txp_0
		output wire        txn                 //                              .txn_0
	);

	wire        i_lvdsio_terminator_0_pll_areset_iopll_reset;                          // i_lvdsio_terminator_0:pll_areset_iopll -> iopll:rst
	wire  [1:0] iopll_lvds_clk_lvds_clk;                                               // iopll:lvds_clk -> i_lvdsio_terminator_0:lvds_clk
	wire        iopll_locked_export;                                                   // iopll:locked -> i_lvdsio_terminator_0:locked
	wire  [1:0] iopll_loaden_loaden;                                                   // iopll:loaden -> i_lvdsio_terminator_0:loaden
	wire  [7:0] iopll_phout_phout;                                                     // iopll:phout -> i_lvdsio_terminator_0:phout
	wire        iopll_outclk4_clk;                                                     // iopll:outclk_4 -> i_lvdsio_terminator_0:outclk_4
	wire  [9:0] i_lvdsio_terminator_0_tx_in_export;                                    // i_lvdsio_terminator_0:tx_in -> i_lvdsio_tx_0:tx_in
	wire  [0:0] i_lvdsio_tx_0_tx_out_p_export;                                         // i_lvdsio_tx_0:tx_out_p -> i_lvdsio_terminator_0:tx_out_p
	wire  [0:0] i_lvdsio_tx_0_tx_out_n_export;                                         // i_lvdsio_tx_0:tx_out_n -> i_lvdsio_terminator_0:tx_out_n
	wire  [1:0] i_lvdsio_terminator_0_ext_lvds_clk_tx_export;                          // i_lvdsio_terminator_0:ext_lvds_clk_tx -> i_lvdsio_tx_0:ext_lvds_clk
	wire  [1:0] i_lvdsio_terminator_0_ext_loaden_tx_export;                            // i_lvdsio_terminator_0:ext_loaden_tx -> i_lvdsio_tx_0:ext_loaden
	wire        i_lvdsio_terminator_0_ext_pll_locked_tx_export;                        // i_lvdsio_terminator_0:ext_pll_locked_tx -> i_lvdsio_tx_0:ext_pll_locked
	wire        i_lvdsio_terminator_0_pll_areset_tx_export;                            // i_lvdsio_terminator_0:pll_areset_tx -> i_lvdsio_tx_0:pll_areset
	wire  [7:0] i_lvdsio_terminator_0_ext_vcoph_tx_export;                             // i_lvdsio_terminator_0:ext_vcoph_tx -> i_lvdsio_tx_0:ext_vcoph
	wire        i_lvdsio_tx_0_pll_locked_export;                                       // i_lvdsio_tx_0:pll_locked -> i_lvdsio_terminator_0:pll_locked_tx_lvds
	wire        i_lvdsio_tx_0_tx_coreclock_export;                                     // i_lvdsio_tx_0:tx_coreclock -> i_lvdsio_terminator_0:tx_coreclock
	wire  [9:0] i_lvdsio_rx_0_rx_out_export;                                           // i_lvdsio_rx_0:rx_out -> i_lvdsio_terminator_0:rx_out
	wire  [0:0] i_lvdsio_terminator_0_rx_in_p_export;                                  // i_lvdsio_terminator_0:rx_in_p -> i_lvdsio_rx_0:rx_in_p
	wire  [0:0] i_lvdsio_terminator_0_rx_in_n_export;                                  // i_lvdsio_terminator_0:rx_in_n -> i_lvdsio_rx_0:rx_in_n
	wire  [1:0] i_lvdsio_terminator_0_ext_lvds_clk_rx_export;                          // i_lvdsio_terminator_0:ext_lvds_clk_rx -> i_lvdsio_rx_0:ext_lvds_clk
	wire  [1:0] i_lvdsio_terminator_0_ext_loaden_rx_export;                            // i_lvdsio_terminator_0:ext_loaden_rx -> i_lvdsio_rx_0:ext_loaden
	wire        i_lvdsio_terminator_0_ext_pll_locked_rx_export;                        // i_lvdsio_terminator_0:ext_pll_locked_rx -> i_lvdsio_rx_0:ext_pll_locked
	wire        i_lvdsio_terminator_0_pll_areset_rx_export;                            // i_lvdsio_terminator_0:pll_areset_rx -> i_lvdsio_rx_0:pll_areset
	wire  [7:0] i_lvdsio_terminator_0_ext_vcoph_rx_export;                             // i_lvdsio_terminator_0:ext_vcoph_rx -> i_lvdsio_rx_0:ext_vcoph
	wire  [0:0] i_lvdsio_terminator_0_rx_dpa_reset_export;                             // i_lvdsio_terminator_0:rx_dpa_reset -> i_lvdsio_rx_0:rx_dpa_reset
	wire  [0:0] i_lvdsio_rx_0_rx_dpa_locked_export;                                    // i_lvdsio_rx_0:rx_dpa_locked -> i_lvdsio_terminator_0:rx_dpa_locked
	wire  [0:0] i_lvdsio_rx_0_rx_divfwdclk_export;                                     // i_lvdsio_rx_0:rx_divfwdclk -> i_lvdsio_terminator_0:rx_divfwdclk
	wire        i_lvdsio_terminator_0_ext_coreclock_export;                            // i_lvdsio_terminator_0:ext_coreclock -> i_lvdsio_rx_0:ext_coreclock
	wire  [9:0] i_tse_pcs_0_tbi_tx_d_muxed_tbi_tx_d_muxed;                             // i_tse_pcs_0:tbi_tx_d_muxed -> i_lvdsio_terminator_0:tbi_tx_d_muxed_0
	wire  [9:0] i_lvdsio_terminator_0_tbi_rx_d_lvds_0_tbi_rx_d_lvds;                   // i_lvdsio_terminator_0:tbi_rx_d_lvds_0 -> i_tse_pcs_0:tbi_rx_d_lvds
	wire        i_lvdsio_terminator_0_tbi_rx_clk_0_tbi_rx_clk;                         // i_lvdsio_terminator_0:tbi_rx_clk_0 -> i_tse_pcs_0:tbi_rx_clk
	wire        i_lvdsio_terminator_0_rx_reset_sequence_done_0_rx_reset_sequence_done; // i_lvdsio_terminator_0:rx_reset_sequence_done_0 -> i_tse_pcs_0:rx_reset_sequence_done
	wire        i_lvdsio_terminator_0_rx_reset_0_rx_reset;                             // i_lvdsio_terminator_0:rx_reset_0 -> i_tse_pcs_0:rx_reset
	wire        i_lvdsio_terminator_0_tx_reset_0_tx_reset;                             // i_lvdsio_terminator_0:tx_reset_0 -> i_tse_pcs_0:tx_reset

	altera_eth_tse_pcs_pma_nf_lvds #(
		.ENABLE_TIMESTAMPING (0),
		.DEV_VERSION         (5377),
		.ENABLE_ECC          (0),
		.ENABLE_REV_LOOPBACK (0),
		.DEVICE_FAMILY       ("AGILEX"),
		.SYNCHRONIZER_DEPTH  (3),
		.ENABLE_CLK_SHARING  (0),
		.ENABLE_SGMII        (1),
		.PHY_IDENTIFIER      (0)
	) i_tse_pcs_0 (
		.clk                    (clk),                                                                   //   input,   width = 1, control_port_clock_connection.clk
		.reset                  (reset),                                                                 //   input,   width = 1,              reset_connection.reset
		.reg_addr               (reg_addr),                                                              //   input,   width = 5,                  control_port.address
		.reg_data_out           (reg_data_out),                                                          //  output,  width = 16,                              .readdata
		.reg_rd                 (reg_rd),                                                                //   input,   width = 1,                              .read
		.reg_data_in            (reg_data_in),                                                           //   input,  width = 16,                              .writedata
		.reg_wr                 (reg_wr),                                                                //   input,   width = 1,                              .write
		.reg_busy               (reg_busy),                                                              //  output,   width = 1,                              .waitrequest
		.ref_clk                (ref_clk),                                                               //   input,   width = 1,  pcs_ref_clk_clock_connection.clk
		.tx_clkena              (tx_clkena),                                                             //  output,   width = 1,       clock_enable_connection.tx_clkena
		.rx_clkena              (rx_clkena),                                                             //  output,   width = 1,                              .rx_clkena
		.gmii_rx_dv             (gmii_rx_dv),                                                            //  output,   width = 1,               gmii_connection.gmii_rx_dv
		.gmii_rx_d              (gmii_rx_d),                                                             //  output,   width = 8,                              .gmii_rx_d
		.gmii_rx_err            (gmii_rx_err),                                                           //  output,   width = 1,                              .gmii_rx_err
		.gmii_tx_en             (gmii_tx_en),                                                            //   input,   width = 1,                              .gmii_tx_en
		.gmii_tx_d              (gmii_tx_d),                                                             //   input,   width = 8,                              .gmii_tx_d
		.gmii_tx_err            (gmii_tx_err),                                                           //   input,   width = 1,                              .gmii_tx_err
		.mii_rx_dv              (mii_rx_dv),                                                             //  output,   width = 1,                mii_connection.mii_rx_dv
		.mii_rx_d               (mii_rx_d),                                                              //  output,   width = 4,                              .mii_rx_d
		.mii_rx_err             (mii_rx_err),                                                            //  output,   width = 1,                              .mii_rx_err
		.mii_tx_en              (mii_tx_en),                                                             //   input,   width = 1,                              .mii_tx_en
		.mii_tx_d               (mii_tx_d),                                                              //   input,   width = 4,                              .mii_tx_d
		.mii_tx_err             (mii_tx_err),                                                            //   input,   width = 1,                              .mii_tx_err
		.mii_col                (mii_col),                                                               //  output,   width = 1,                              .mii_col
		.mii_crs                (mii_crs),                                                               //  output,   width = 1,                              .mii_crs
		.set_10                 (set_10),                                                                //  output,   width = 1,       sgmii_status_connection.set_10
		.set_1000               (set_1000),                                                              //  output,   width = 1,                              .set_1000
		.set_100                (set_100),                                                               //  output,   width = 1,                              .set_100
		.hd_ena                 (hd_ena),                                                                //  output,   width = 1,                              .hd_ena
		.tx_clk                 (tx_clk),                                                                //  output,   width = 1, pcs_transmit_clock_connection.clk
		.rx_clk                 (rx_clk),                                                                //  output,   width = 1,  pcs_receive_clock_connection.clk
		.reset_tx_clk           (reset_tx_clk),                                                          //   input,   width = 1, pcs_transmit_reset_connection.reset
		.reset_rx_clk           (reset_rx_clk),                                                          //   input,   width = 1,  pcs_receive_reset_connection.reset
		.led_crs                (led_crs),                                                               //  output,   width = 1,         status_led_connection.export
		.led_link               (led_link),                                                              //  output,   width = 1,                              .export
		.led_panel_link         (led_panel_link),                                                        //  output,   width = 1,                              .export
		.led_col                (led_col),                                                               //  output,   width = 1,                              .export
		.led_an                 (led_an),                                                                //  output,   width = 1,                              .export
		.led_char_err           (led_char_err),                                                          //  output,   width = 1,                              .export
		.led_disp_err           (led_disp_err),                                                          //  output,   width = 1,                              .export
		.rx_recovclkout         (rx_recovclkout),                                                        //  output,   width = 1,     serdes_control_connection.export
		.rx_reset               (i_lvdsio_terminator_0_rx_reset_0_rx_reset),                             //   input,   width = 1,                      rx_reset.rx_reset
		.rx_reset_sequence_done (i_lvdsio_terminator_0_rx_reset_sequence_done_0_rx_reset_sequence_done), //   input,   width = 1,        rx_reset_sequence_done.rx_reset_sequence_done
		.tbi_rx_clk             (i_lvdsio_terminator_0_tbi_rx_clk_0_tbi_rx_clk),                         //   input,   width = 1,                    tbi_rx_clk.tbi_rx_clk
		.tx_reset               (i_lvdsio_terminator_0_tx_reset_0_tx_reset),                             //   input,   width = 1,                      tx_reset.tx_reset
		.tbi_tx_d_muxed         (i_tse_pcs_0_tbi_tx_d_muxed_tbi_tx_d_muxed),                             //  output,  width = 10,                tbi_tx_d_muxed.tbi_tx_d_muxed
		.tbi_rx_d_lvds          (i_lvdsio_terminator_0_tbi_rx_d_lvds_0_tbi_rx_d_lvds),                   //   input,  width = 10,                 tbi_rx_d_lvds.tbi_rx_d_lvds
		.pcs_phase_measure_clk  (1'b0),                                                                  // (terminated),                                            
		.rx_latency_adj         (),                                                                      // (terminated),                                            
		.tx_latency_adj         (),                                                                      // (terminated),                                            
		.tx_ptp_alignment       (),                                                                      // (terminated),                                            
		.pcs_eccstatus          ()                                                                       // (terminated),                                            
	);

	altera_eth_tse_ag_lvds_terminator #(
		.NUM_CHANNELS       (1),
		.SYNCHRONIZER_DEPTH (3),
		.DEVICE_FAMILY      ("AGILEX")
	) i_lvdsio_terminator_0 (
		.lvds_inclock             (ref_clk),                                                               //   input,   width = 1,             lvds_inclock.clk
		.reset                    (reset),                                                                 //   input,   width = 1,                 reset_in.reset
		.pll_areset_iopll         (i_lvdsio_terminator_0_pll_areset_iopll_reset),                          //  output,   width = 1,         pll_areset_iopll.reset
		.pll_areset_rx            (i_lvdsio_terminator_0_pll_areset_rx_export),                            //  output,   width = 1,            pll_areset_rx.export
		.lvds_tx_pll_locked       (lvds_tx_pll_locked),                                                    //  output,   width = 1,       lvds_tx_pll_locked.export
		.pll_locked_tx_lvds       (i_lvdsio_tx_0_pll_locked_export),                                       //   input,   width = 1,       pll_locked_tx_lvds.export
		.tx_coreclock             (i_lvdsio_tx_0_tx_coreclock_export),                                     //   input,   width = 1,             tx_coreclock.export
		.ext_pll_locked_tx        (i_lvdsio_terminator_0_ext_pll_locked_tx_export),                        //  output,   width = 1,        ext_pll_locked_tx.export
		.ext_coreclock            (i_lvdsio_terminator_0_ext_coreclock_export),                            //  output,   width = 1,            ext_coreclock.export
		.ext_pll_locked_rx        (i_lvdsio_terminator_0_ext_pll_locked_rx_export),                        //  output,   width = 1,        ext_pll_locked_rx.export
		.pll_areset_tx            (i_lvdsio_terminator_0_pll_areset_tx_export),                            //  output,   width = 1,            pll_areset_tx.export
		.ext_loaden_rx            (i_lvdsio_terminator_0_ext_loaden_rx_export),                            //  output,   width = 2,            ext_loaden_rx.export
		.ext_vcoph_rx             (i_lvdsio_terminator_0_ext_vcoph_rx_export),                             //  output,   width = 8,             ext_vcoph_rx.export
		.ext_lvds_clk_tx          (i_lvdsio_terminator_0_ext_lvds_clk_tx_export),                          //  output,   width = 2,          ext_lvds_clk_tx.export
		.ext_loaden_tx            (i_lvdsio_terminator_0_ext_loaden_tx_export),                            //  output,   width = 2,            ext_loaden_tx.export
		.ext_lvds_clk_rx          (i_lvdsio_terminator_0_ext_lvds_clk_rx_export),                          //  output,   width = 2,          ext_lvds_clk_rx.export
		.ext_vcoph_tx             (i_lvdsio_terminator_0_ext_vcoph_tx_export),                             //  output,   width = 8,             ext_vcoph_tx.export
		.tx_out_n                 (i_lvdsio_tx_0_tx_out_n_export),                                         //   input,   width = 1,                 tx_out_n.export
		.tx_out_p                 (i_lvdsio_tx_0_tx_out_p_export),                                         //   input,   width = 1,                 tx_out_p.export
		.tx_in                    (i_lvdsio_terminator_0_tx_in_export),                                    //  output,  width = 10,                    tx_in.export
		.rx_dpa_reset             (i_lvdsio_terminator_0_rx_dpa_reset_export),                             //  output,   width = 1,             rx_dpa_reset.export
		.rx_in_n                  (i_lvdsio_terminator_0_rx_in_n_export),                                  //  output,   width = 1,                  rx_in_n.export
		.rx_out                   (i_lvdsio_rx_0_rx_out_export),                                           //   input,  width = 10,                   rx_out.export
		.rx_divfwdclk             (i_lvdsio_rx_0_rx_divfwdclk_export),                                     //   input,   width = 1,             rx_divfwdclk.export
		.rx_dpa_locked            (i_lvdsio_rx_0_rx_dpa_locked_export),                                    //   input,   width = 1,            rx_dpa_locked.export
		.rx_in_p                  (i_lvdsio_terminator_0_rx_in_p_export),                                  //  output,   width = 1,                  rx_in_p.export
		.phout                    (iopll_phout_phout),                                                     //   input,   width = 8,                    phout.phout
		.locked                   (iopll_locked_export),                                                   //   input,   width = 1,                   locked.export
		.lvds_clk                 (iopll_lvds_clk_lvds_clk),                                               //   input,   width = 2,                 lvds_clk.lvds_clk
		.loaden                   (iopll_loaden_loaden),                                                   //   input,   width = 2,                   loaden.loaden
		.outclk_4                 (iopll_outclk4_clk),                                                     //   input,   width = 1,                  outclk4.clk
		.rxp_0                    (rxp),                                                                   //   input,   width = 1,      serial_connection_0.export
		.rxn_0                    (rxn),                                                                   //   input,   width = 1,                         .export
		.txp_0                    (txp),                                                                   //  output,   width = 1,                         .export
		.txn_0                    (txn),                                                                   //  output,   width = 1,                         .export
		.rx_reset_0               (i_lvdsio_terminator_0_rx_reset_0_rx_reset),                             //  output,   width = 1,               rx_reset_0.rx_reset
		.rx_reset_sequence_done_0 (i_lvdsio_terminator_0_rx_reset_sequence_done_0_rx_reset_sequence_done), //  output,   width = 1, rx_reset_sequence_done_0.rx_reset_sequence_done
		.tbi_rx_clk_0             (i_lvdsio_terminator_0_tbi_rx_clk_0_tbi_rx_clk),                         //  output,   width = 1,             tbi_rx_clk_0.tbi_rx_clk
		.tx_reset_0               (i_lvdsio_terminator_0_tx_reset_0_tx_reset),                             //  output,   width = 1,               tx_reset_0.tx_reset
		.tbi_rx_d_lvds_0          (i_lvdsio_terminator_0_tbi_rx_d_lvds_0_tbi_rx_d_lvds),                   //  output,  width = 10,          tbi_rx_d_lvds_0.tbi_rx_d_lvds
		.tbi_tx_d_muxed_0         (i_tse_pcs_0_tbi_tx_d_muxed_tbi_tx_d_muxed),                             //   input,  width = 10,         tbi_tx_d_muxed_0.tbi_tx_d_muxed
		.rxp_1                    (1'b0),                                                                  // (terminated),                                       
		.rxn_1                    (1'b0),                                                                  // (terminated),                                       
		.txp_1                    (),                                                                      // (terminated),                                       
		.txn_1                    (),                                                                      // (terminated),                                       
		.rx_reset_1               (),                                                                      // (terminated),                                       
		.rx_reset_sequence_done_1 (),                                                                      // (terminated),                                       
		.tbi_rx_clk_1             (),                                                                      // (terminated),                                       
		.tx_reset_1               (),                                                                      // (terminated),                                       
		.tbi_rx_d_lvds_1          (),                                                                      // (terminated),                                       
		.tbi_tx_d_muxed_1         (10'b0000000000),                                                        // (terminated),                                       
		.rxp_2                    (1'b0),                                                                  // (terminated),                                       
		.rxn_2                    (1'b0),                                                                  // (terminated),                                       
		.txp_2                    (),                                                                      // (terminated),                                       
		.txn_2                    (),                                                                      // (terminated),                                       
		.rx_reset_2               (),                                                                      // (terminated),                                       
		.rx_reset_sequence_done_2 (),                                                                      // (terminated),                                       
		.tbi_rx_clk_2             (),                                                                      // (terminated),                                       
		.tx_reset_2               (),                                                                      // (terminated),                                       
		.tbi_rx_d_lvds_2          (),                                                                      // (terminated),                                       
		.tbi_tx_d_muxed_2         (10'b0000000000),                                                        // (terminated),                                       
		.rxp_3                    (1'b0),                                                                  // (terminated),                                       
		.rxn_3                    (1'b0),                                                                  // (terminated),                                       
		.txp_3                    (),                                                                      // (terminated),                                       
		.txn_3                    (),                                                                      // (terminated),                                       
		.rx_reset_3               (),                                                                      // (terminated),                                       
		.rx_reset_sequence_done_3 (),                                                                      // (terminated),                                       
		.tbi_rx_clk_3             (),                                                                      // (terminated),                                       
		.tx_reset_3               (),                                                                      // (terminated),                                       
		.tbi_rx_d_lvds_3          (),                                                                      // (terminated),                                       
		.tbi_tx_d_muxed_3         (10'b0000000000),                                                        // (terminated),                                       
		.rxp_4                    (1'b0),                                                                  // (terminated),                                       
		.rxn_4                    (1'b0),                                                                  // (terminated),                                       
		.txp_4                    (),                                                                      // (terminated),                                       
		.txn_4                    (),                                                                      // (terminated),                                       
		.rx_reset_4               (),                                                                      // (terminated),                                       
		.rx_reset_sequence_done_4 (),                                                                      // (terminated),                                       
		.tbi_rx_clk_4             (),                                                                      // (terminated),                                       
		.tx_reset_4               (),                                                                      // (terminated),                                       
		.tbi_rx_d_lvds_4          (),                                                                      // (terminated),                                       
		.tbi_tx_d_muxed_4         (10'b0000000000),                                                        // (terminated),                                       
		.rxp_5                    (1'b0),                                                                  // (terminated),                                       
		.rxn_5                    (1'b0),                                                                  // (terminated),                                       
		.txp_5                    (),                                                                      // (terminated),                                       
		.txn_5                    (),                                                                      // (terminated),                                       
		.rx_reset_5               (),                                                                      // (terminated),                                       
		.rx_reset_sequence_done_5 (),                                                                      // (terminated),                                       
		.tbi_rx_clk_5             (),                                                                      // (terminated),                                       
		.tx_reset_5               (),                                                                      // (terminated),                                       
		.tbi_rx_d_lvds_5          (),                                                                      // (terminated),                                       
		.tbi_tx_d_muxed_5         (10'b0000000000),                                                        // (terminated),                                       
		.rxp_6                    (1'b0),                                                                  // (terminated),                                       
		.rxn_6                    (1'b0),                                                                  // (terminated),                                       
		.txp_6                    (),                                                                      // (terminated),                                       
		.txn_6                    (),                                                                      // (terminated),                                       
		.rx_reset_6               (),                                                                      // (terminated),                                       
		.rx_reset_sequence_done_6 (),                                                                      // (terminated),                                       
		.tbi_rx_clk_6             (),                                                                      // (terminated),                                       
		.tx_reset_6               (),                                                                      // (terminated),                                       
		.tbi_rx_d_lvds_6          (),                                                                      // (terminated),                                       
		.tbi_tx_d_muxed_6         (10'b0000000000),                                                        // (terminated),                                       
		.rxp_7                    (1'b0),                                                                  // (terminated),                                       
		.rxn_7                    (1'b0),                                                                  // (terminated),                                       
		.txp_7                    (),                                                                      // (terminated),                                       
		.txn_7                    (),                                                                      // (terminated),                                       
		.rx_reset_7               (),                                                                      // (terminated),                                       
		.rx_reset_sequence_done_7 (),                                                                      // (terminated),                                       
		.tbi_rx_clk_7             (),                                                                      // (terminated),                                       
		.tx_reset_7               (),                                                                      // (terminated),                                       
		.tbi_rx_d_lvds_7          (),                                                                      // (terminated),                                       
		.tbi_tx_d_muxed_7         (10'b0000000000)                                                         // (terminated),                                       
	);

	eth_tse_0_altera_iopll_1931_c6qpzfa iopll (
		.refclk   (ref_clk),                                      //   input,  width = 1,   refclk.clk
		.locked   (iopll_locked_export),                          //  output,  width = 1,   locked.export
		.rst      (i_lvdsio_terminator_0_pll_areset_iopll_reset), //   input,  width = 1,    reset.reset
		.phout    (iopll_phout_phout),                            //  output,  width = 8,    phout.phout
		.lvds_clk (iopll_lvds_clk_lvds_clk),                      //  output,  width = 2, lvds_clk.lvds_clk
		.loaden   (iopll_loaden_loaden),                          //  output,  width = 2,   loaden.loaden
		.outclk_4 (iopll_outclk4_clk)                             //  output,  width = 1,  outclk4.clk
	);

	eth_tse_0_altera_lvds_2001_f6avgwq i_lvdsio_tx_0 (
		.tx_in          (i_lvdsio_terminator_0_tx_in_export),             //   input,  width = 10,          tx_in.export
		.tx_out_p       (i_lvdsio_tx_0_tx_out_p_export),                  //  output,   width = 1,       tx_out_p.export
		.tx_out_n       (i_lvdsio_tx_0_tx_out_n_export),                  //  output,   width = 1,       tx_out_n.export
		.tx_coreclock   (i_lvdsio_tx_0_tx_coreclock_export),              //  output,   width = 1,   tx_coreclock.export
		.pll_areset     (i_lvdsio_terminator_0_pll_areset_tx_export),     //   input,   width = 1,     pll_areset.export
		.ext_vcoph      (i_lvdsio_terminator_0_ext_vcoph_tx_export),      //   input,   width = 8,      ext_vcoph.export
		.ext_lvds_clk   (i_lvdsio_terminator_0_ext_lvds_clk_tx_export),   //   input,   width = 2,   ext_lvds_clk.export
		.ext_loaden     (i_lvdsio_terminator_0_ext_loaden_tx_export),     //   input,   width = 2,     ext_loaden.export
		.ext_pll_locked (i_lvdsio_terminator_0_ext_pll_locked_tx_export), //   input,   width = 1, ext_pll_locked.export
		.pll_locked     (i_lvdsio_tx_0_pll_locked_export)                 //  output,   width = 1,     pll_locked.export
	);

	eth_tse_0_altera_lvds_2001_2asfj3i i_lvdsio_rx_0 (
		.rx_in_p        (i_lvdsio_terminator_0_rx_in_p_export),           //   input,   width = 1,        rx_in_p.export
		.rx_in_n        (i_lvdsio_terminator_0_rx_in_n_export),           //   input,   width = 1,        rx_in_n.export
		.rx_out         (i_lvdsio_rx_0_rx_out_export),                    //  output,  width = 10,         rx_out.export
		.pll_areset     (i_lvdsio_terminator_0_pll_areset_rx_export),     //   input,   width = 1,     pll_areset.export
		.rx_dpa_locked  (i_lvdsio_rx_0_rx_dpa_locked_export),             //  output,   width = 1,  rx_dpa_locked.export
		.rx_dpa_reset   (i_lvdsio_terminator_0_rx_dpa_reset_export),      //   input,   width = 1,   rx_dpa_reset.export
		.rx_divfwdclk   (i_lvdsio_rx_0_rx_divfwdclk_export),              //  output,   width = 1,   rx_divfwdclk.export
		.ext_vcoph      (i_lvdsio_terminator_0_ext_vcoph_rx_export),      //   input,   width = 8,      ext_vcoph.export
		.ext_lvds_clk   (i_lvdsio_terminator_0_ext_lvds_clk_rx_export),   //   input,   width = 2,   ext_lvds_clk.export
		.ext_loaden     (i_lvdsio_terminator_0_ext_loaden_rx_export),     //   input,   width = 2,     ext_loaden.export
		.ext_coreclock  (i_lvdsio_terminator_0_ext_coreclock_export),     //   input,   width = 1,  ext_coreclock.export
		.ext_pll_locked (i_lvdsio_terminator_0_ext_pll_locked_rx_export), //   input,   width = 1, ext_pll_locked.export
		.pll_locked     ()                                                //  output,   width = 1,     pll_locked.export
	);

endmodule
