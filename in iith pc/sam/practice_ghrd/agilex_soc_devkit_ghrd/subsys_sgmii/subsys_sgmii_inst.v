	subsys_sgmii u0 (
		.emac_gtx_clk_clk                (_connected_to_emac_gtx_clk_clk_),                //   input,   width = 1,           emac_gtx_clk.clk
		.emac_tx_clk_in_clk              (_connected_to_emac_tx_clk_in_clk_),              //  output,   width = 1,         emac_tx_clk_in.clk
		.emac_rx_clk_in_clk              (_connected_to_emac_rx_clk_in_clk_),              //  output,   width = 1,         emac_rx_clk_in.clk
		.emac_tx_reset_reset_n           (_connected_to_emac_tx_reset_reset_n_),           //   input,   width = 1,          emac_tx_reset.reset_n
		.emac_rx_reset_reset_n           (_connected_to_emac_rx_reset_reset_n_),           //   input,   width = 1,          emac_rx_reset.reset_n
		.mdio_gmii_mdi_i                 (_connected_to_mdio_gmii_mdi_i_),                 //   input,   width = 1,                   mdio.gmii_mdi_i
		.mdio_gmii_mdo_o                 (_connected_to_mdio_gmii_mdo_o_),                 //  output,   width = 1,                       .gmii_mdo_o
		.mdio_gmii_mdo_o_e               (_connected_to_mdio_gmii_mdo_o_e_),               //  output,   width = 1,                       .gmii_mdo_o_e
		.splitter_emac_phy_txd_o         (_connected_to_splitter_emac_phy_txd_o_),         //   input,   width = 8,          splitter_emac.phy_txd_o
		.splitter_emac_phy_txen_o        (_connected_to_splitter_emac_phy_txen_o_),        //   input,   width = 1,                       .phy_txen_o
		.splitter_emac_phy_txer_o        (_connected_to_splitter_emac_phy_txer_o_),        //   input,   width = 1,                       .phy_txer_o
		.splitter_emac_phy_mac_speed_o   (_connected_to_splitter_emac_phy_mac_speed_o_),   //   input,   width = 2,                       .phy_mac_speed_o
		.splitter_emac_gmii_mdo_o        (_connected_to_splitter_emac_gmii_mdo_o_),        //   input,   width = 1,                       .gmii_mdo_o
		.splitter_emac_gmii_mdo_o_e      (_connected_to_splitter_emac_gmii_mdo_o_e_),      //   input,   width = 1,                       .gmii_mdo_o_e
		.splitter_emac_ptp_pps_o         (_connected_to_splitter_emac_ptp_pps_o_),         //   input,   width = 1,                       .ptp_pps_o
		.splitter_emac_phy_rxdv_i        (_connected_to_splitter_emac_phy_rxdv_i_),        //  output,   width = 1,                       .phy_rxdv_i
		.splitter_emac_phy_rxer_i        (_connected_to_splitter_emac_phy_rxer_i_),        //  output,   width = 1,                       .phy_rxer_i
		.splitter_emac_phy_rxd_i         (_connected_to_splitter_emac_phy_rxd_i_),         //  output,   width = 8,                       .phy_rxd_i
		.splitter_emac_phy_col_i         (_connected_to_splitter_emac_phy_col_i_),         //  output,   width = 1,                       .phy_col_i
		.splitter_emac_phy_crs_i         (_connected_to_splitter_emac_phy_crs_i_),         //  output,   width = 1,                       .phy_crs_i
		.splitter_emac_gmii_mdi_i        (_connected_to_splitter_emac_gmii_mdi_i_),        //  output,   width = 1,                       .gmii_mdi_i
		.splitter_emac_ptp_aux_ts_trig_i (_connected_to_splitter_emac_ptp_aux_ts_trig_i_), //  output,   width = 1,                       .ptp_aux_ts_trig_i
		.splitter_emac_ptp_tstmp_data    (_connected_to_splitter_emac_ptp_tstmp_data_),    //   input,   width = 1,                       .ptp_tstmp_data
		.splitter_emac_ptp_tstmp_en      (_connected_to_splitter_emac_ptp_tstmp_en_),      //   input,   width = 1,                       .ptp_tstmp_en
		.ptp_ptp_aux_ts_trig_i           (_connected_to_ptp_ptp_aux_ts_trig_i_),           //   input,   width = 1,                    ptp.ptp_aux_ts_trig_i
		.ptp_ptp_pps_o                   (_connected_to_ptp_ptp_pps_o_),                   //  output,   width = 1,                       .ptp_pps_o
		.ptp_ptp_tstmp_data              (_connected_to_ptp_ptp_tstmp_data_),              //  output,   width = 1,                       .ptp_tstmp_data
		.ptp_ptp_tstmp_en                (_connected_to_ptp_ptp_tstmp_en_),                //  output,   width = 1,                       .ptp_tstmp_en
		.sgmii_status_set_10             (_connected_to_sgmii_status_set_10_),             //  output,   width = 1,           sgmii_status.set_10
		.sgmii_status_set_1000           (_connected_to_sgmii_status_set_1000_),           //  output,   width = 1,                       .set_1000
		.sgmii_status_set_100            (_connected_to_sgmii_status_set_100_),            //  output,   width = 1,                       .set_100
		.sgmii_status_hd_ena             (_connected_to_sgmii_status_hd_ena_),             //  output,   width = 1,                       .hd_ena
		.status_led_crs                  (_connected_to_status_led_crs_),                  //  output,   width = 1,             status_led.crs
		.status_led_link                 (_connected_to_status_led_link_),                 //  output,   width = 1,                       .link
		.status_led_panel_link           (_connected_to_status_led_panel_link_),           //  output,   width = 1,                       .panel_link
		.status_led_col                  (_connected_to_status_led_col_),                  //  output,   width = 1,                       .col
		.status_led_an                   (_connected_to_status_led_an_),                   //  output,   width = 1,                       .an
		.status_led_char_err             (_connected_to_status_led_char_err_),             //  output,   width = 1,                       .char_err
		.status_led_disp_err             (_connected_to_status_led_disp_err_),             //  output,   width = 1,                       .disp_err
		.serdes_control_export           (_connected_to_serdes_control_export_),           //  output,   width = 1,         serdes_control.export
		.lvds_tx_pll_locked_export       (_connected_to_lvds_tx_pll_locked_export_),       //  output,   width = 1,     lvds_tx_pll_locked.export
		.serial_connection_rxp_0         (_connected_to_serial_connection_rxp_0_),         //   input,   width = 1,      serial_connection.rxp_0
		.serial_connection_rxn_0         (_connected_to_serial_connection_rxn_0_),         //   input,   width = 1,                       .rxn_0
		.serial_connection_txp_0         (_connected_to_serial_connection_txp_0_),         //  output,   width = 1,                       .txp_0
		.serial_connection_txn_0         (_connected_to_serial_connection_txn_0_),         //  output,   width = 1,                       .txn_0
		.clk_125_clk                     (_connected_to_clk_125_clk_),                     //   input,   width = 1,                clk_125.clk
		.csr_waitrequest                 (_connected_to_csr_waitrequest_),                 //  output,   width = 1,                    csr.waitrequest
		.csr_readdata                    (_connected_to_csr_readdata_),                    //  output,  width = 32,                       .readdata
		.csr_readdatavalid               (_connected_to_csr_readdatavalid_),               //  output,   width = 1,                       .readdatavalid
		.csr_burstcount                  (_connected_to_csr_burstcount_),                  //   input,   width = 1,                       .burstcount
		.csr_writedata                   (_connected_to_csr_writedata_),                   //   input,  width = 32,                       .writedata
		.csr_address                     (_connected_to_csr_address_),                     //   input,   width = 7,                       .address
		.csr_write                       (_connected_to_csr_write_),                       //   input,   width = 1,                       .write
		.csr_read                        (_connected_to_csr_read_),                        //   input,   width = 1,                       .read
		.csr_byteenable                  (_connected_to_csr_byteenable_),                  //   input,   width = 4,                       .byteenable
		.csr_debugaccess                 (_connected_to_csr_debugaccess_),                 //   input,   width = 1,                       .debugaccess
		.csr_clk_clk                     (_connected_to_csr_clk_clk_),                     //   input,   width = 1,                csr_clk.clk
		.sgmii_debug_status_pio_export   (_connected_to_sgmii_debug_status_pio_export_),   //   input,  width = 13, sgmii_debug_status_pio.export
		.rst_in_reset_n                  (_connected_to_rst_in_reset_n_)                   //   input,   width = 1,                 rst_in.reset_n
	);

