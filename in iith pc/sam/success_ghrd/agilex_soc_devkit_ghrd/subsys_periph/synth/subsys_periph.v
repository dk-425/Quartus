// subsys_periph.v

// Generated using ACDS version 22.4 94

`timescale 1 ps / 1 ps
module subsys_periph (
		input  wire [1:0]  ILC_irq_irq,                           //                        ILC_irq.irq
		input  wire [3:0]  button_pio_external_connection_export, // button_pio_external_connection.export
		output wire        button_pio_irq_irq,                    //                 button_pio_irq.irq
		input  wire [3:0]  dipsw_pio_external_connection_export,  //  dipsw_pio_external_connection.export
		output wire        dipsw_pio_irq_irq,                     //                  dipsw_pio_irq.irq
		input  wire [2:0]  led_pio_external_connection_in_port,   //    led_pio_external_connection.in_port
		output wire [2:0]  led_pio_external_connection_out_port,  //                               .out_port
		output wire        pb_cpu_0_s0_waitrequest,               //                    pb_cpu_0_s0.waitrequest
		output wire [31:0] pb_cpu_0_s0_readdata,                  //                               .readdata
		output wire        pb_cpu_0_s0_readdatavalid,             //                               .readdatavalid
		input  wire [0:0]  pb_cpu_0_s0_burstcount,                //                               .burstcount
		input  wire [31:0] pb_cpu_0_s0_writedata,                 //                               .writedata
		input  wire [8:0]  pb_cpu_0_s0_address,                   //                               .address
		input  wire        pb_cpu_0_s0_write,                     //                               .write
		input  wire        pb_cpu_0_s0_read,                      //                               .read
		input  wire [3:0]  pb_cpu_0_s0_byteenable,                //                               .byteenable
		input  wire        pb_cpu_0_s0_debugaccess,               //                               .debugaccess
		input  wire        clk_clk,                               //                            clk.clk
		input  wire        reset_reset_n                          //                          reset.reset_n
	);

	wire         periph_clk_out_clk_clk;                       // periph_clk:out_clk -> [ILC:clk, button_pio:clk, dipsw_pio:clk, led_pio:clk, mm_interconnect_0:periph_clk_out_clk_clk, pb_cpu_0:clk, periph_rst_in:clk]
	wire         periph_rst_in_out_reset_reset;                // periph_rst_in:out_reset_n -> [ILC:reset_n, button_pio:reset_n, dipsw_pio:reset_n, led_pio:reset_n, mm_interconnect_0:pb_cpu_0_m0_translator_reset_reset_bridge_in_reset_reset, mm_interconnect_0:pb_cpu_0_reset_reset_bridge_in_reset_reset, pb_cpu_0:reset]
	wire         pb_cpu_0_m0_waitrequest;                      // mm_interconnect_0:pb_cpu_0_m0_waitrequest -> pb_cpu_0:m0_waitrequest
	wire  [31:0] pb_cpu_0_m0_readdata;                         // mm_interconnect_0:pb_cpu_0_m0_readdata -> pb_cpu_0:m0_readdata
	wire         pb_cpu_0_m0_debugaccess;                      // pb_cpu_0:m0_debugaccess -> mm_interconnect_0:pb_cpu_0_m0_debugaccess
	wire   [8:0] pb_cpu_0_m0_address;                          // pb_cpu_0:m0_address -> mm_interconnect_0:pb_cpu_0_m0_address
	wire         pb_cpu_0_m0_read;                             // pb_cpu_0:m0_read -> mm_interconnect_0:pb_cpu_0_m0_read
	wire   [3:0] pb_cpu_0_m0_byteenable;                       // pb_cpu_0:m0_byteenable -> mm_interconnect_0:pb_cpu_0_m0_byteenable
	wire         pb_cpu_0_m0_readdatavalid;                    // mm_interconnect_0:pb_cpu_0_m0_readdatavalid -> pb_cpu_0:m0_readdatavalid
	wire  [31:0] pb_cpu_0_m0_writedata;                        // pb_cpu_0:m0_writedata -> mm_interconnect_0:pb_cpu_0_m0_writedata
	wire         pb_cpu_0_m0_write;                            // pb_cpu_0:m0_write -> mm_interconnect_0:pb_cpu_0_m0_write
	wire   [0:0] pb_cpu_0_m0_burstcount;                       // pb_cpu_0:m0_burstcount -> mm_interconnect_0:pb_cpu_0_m0_burstcount
	wire  [31:0] mm_interconnect_0_ilc_avalon_slave_readdata;  // ILC:avmm_rddata -> mm_interconnect_0:ILC_avalon_slave_readdata
	wire   [5:0] mm_interconnect_0_ilc_avalon_slave_address;   // mm_interconnect_0:ILC_avalon_slave_address -> ILC:avmm_addr
	wire         mm_interconnect_0_ilc_avalon_slave_read;      // mm_interconnect_0:ILC_avalon_slave_read -> ILC:avmm_read
	wire         mm_interconnect_0_ilc_avalon_slave_write;     // mm_interconnect_0:ILC_avalon_slave_write -> ILC:avmm_write
	wire  [31:0] mm_interconnect_0_ilc_avalon_slave_writedata; // mm_interconnect_0:ILC_avalon_slave_writedata -> ILC:avmm_wrdata
	wire         mm_interconnect_0_led_pio_s1_chipselect;      // mm_interconnect_0:led_pio_s1_chipselect -> led_pio:chipselect
	wire  [31:0] mm_interconnect_0_led_pio_s1_readdata;        // led_pio:readdata -> mm_interconnect_0:led_pio_s1_readdata
	wire   [1:0] mm_interconnect_0_led_pio_s1_address;         // mm_interconnect_0:led_pio_s1_address -> led_pio:address
	wire         mm_interconnect_0_led_pio_s1_write;           // mm_interconnect_0:led_pio_s1_write -> led_pio:write_n
	wire  [31:0] mm_interconnect_0_led_pio_s1_writedata;       // mm_interconnect_0:led_pio_s1_writedata -> led_pio:writedata
	wire         mm_interconnect_0_dipsw_pio_s1_chipselect;    // mm_interconnect_0:dipsw_pio_s1_chipselect -> dipsw_pio:chipselect
	wire  [31:0] mm_interconnect_0_dipsw_pio_s1_readdata;      // dipsw_pio:readdata -> mm_interconnect_0:dipsw_pio_s1_readdata
	wire   [1:0] mm_interconnect_0_dipsw_pio_s1_address;       // mm_interconnect_0:dipsw_pio_s1_address -> dipsw_pio:address
	wire         mm_interconnect_0_dipsw_pio_s1_write;         // mm_interconnect_0:dipsw_pio_s1_write -> dipsw_pio:write_n
	wire  [31:0] mm_interconnect_0_dipsw_pio_s1_writedata;     // mm_interconnect_0:dipsw_pio_s1_writedata -> dipsw_pio:writedata
	wire         mm_interconnect_0_button_pio_s1_chipselect;   // mm_interconnect_0:button_pio_s1_chipselect -> button_pio:chipselect
	wire  [31:0] mm_interconnect_0_button_pio_s1_readdata;     // button_pio:readdata -> mm_interconnect_0:button_pio_s1_readdata
	wire   [1:0] mm_interconnect_0_button_pio_s1_address;      // mm_interconnect_0:button_pio_s1_address -> button_pio:address
	wire         mm_interconnect_0_button_pio_s1_write;        // mm_interconnect_0:button_pio_s1_write -> button_pio:write_n
	wire  [31:0] mm_interconnect_0_button_pio_s1_writedata;    // mm_interconnect_0:button_pio_s1_writedata -> button_pio:writedata

	ILC ilc (
		.reset_n     (periph_rst_in_out_reset_reset),                //   input,   width = 1,      reset_n.reset_n
		.clk         (periph_clk_out_clk_clk),                       //   input,   width = 1,          clk.clk
		.irq         (ILC_irq_irq),                                  //   input,   width = 2,          irq.irq
		.avmm_addr   (mm_interconnect_0_ilc_avalon_slave_address),   //   input,   width = 6, avalon_slave.address
		.avmm_wrdata (mm_interconnect_0_ilc_avalon_slave_writedata), //   input,  width = 32,             .writedata
		.avmm_write  (mm_interconnect_0_ilc_avalon_slave_write),     //   input,   width = 1,             .write
		.avmm_read   (mm_interconnect_0_ilc_avalon_slave_read),      //   input,   width = 1,             .read
		.avmm_rddata (mm_interconnect_0_ilc_avalon_slave_readdata)   //  output,  width = 32,             .readdata
	);

	button_pio button_pio (
		.clk        (periph_clk_out_clk_clk),                     //   input,   width = 1,                 clk.clk
		.reset_n    (periph_rst_in_out_reset_reset),              //   input,   width = 1,               reset.reset_n
		.address    (mm_interconnect_0_button_pio_s1_address),    //   input,   width = 2,                  s1.address
		.write_n    (~mm_interconnect_0_button_pio_s1_write),     //   input,   width = 1,                    .write_n
		.writedata  (mm_interconnect_0_button_pio_s1_writedata),  //   input,  width = 32,                    .writedata
		.chipselect (mm_interconnect_0_button_pio_s1_chipselect), //   input,   width = 1,                    .chipselect
		.readdata   (mm_interconnect_0_button_pio_s1_readdata),   //  output,  width = 32,                    .readdata
		.in_port    (button_pio_external_connection_export),      //   input,   width = 4, external_connection.export
		.irq        (button_pio_irq_irq)                          //  output,   width = 1,                 irq.irq
	);

	dipsw_pio dipsw_pio (
		.clk        (periph_clk_out_clk_clk),                    //   input,   width = 1,                 clk.clk
		.reset_n    (periph_rst_in_out_reset_reset),             //   input,   width = 1,               reset.reset_n
		.address    (mm_interconnect_0_dipsw_pio_s1_address),    //   input,   width = 2,                  s1.address
		.write_n    (~mm_interconnect_0_dipsw_pio_s1_write),     //   input,   width = 1,                    .write_n
		.writedata  (mm_interconnect_0_dipsw_pio_s1_writedata),  //   input,  width = 32,                    .writedata
		.chipselect (mm_interconnect_0_dipsw_pio_s1_chipselect), //   input,   width = 1,                    .chipselect
		.readdata   (mm_interconnect_0_dipsw_pio_s1_readdata),   //  output,  width = 32,                    .readdata
		.in_port    (dipsw_pio_external_connection_export),      //   input,   width = 4, external_connection.export
		.irq        (dipsw_pio_irq_irq)                          //  output,   width = 1,                 irq.irq
	);

	led_pio led_pio (
		.clk        (periph_clk_out_clk_clk),                  //   input,   width = 1,                 clk.clk
		.reset_n    (periph_rst_in_out_reset_reset),           //   input,   width = 1,               reset.reset_n
		.address    (mm_interconnect_0_led_pio_s1_address),    //   input,   width = 2,                  s1.address
		.write_n    (~mm_interconnect_0_led_pio_s1_write),     //   input,   width = 1,                    .write_n
		.writedata  (mm_interconnect_0_led_pio_s1_writedata),  //   input,  width = 32,                    .writedata
		.chipselect (mm_interconnect_0_led_pio_s1_chipselect), //   input,   width = 1,                    .chipselect
		.readdata   (mm_interconnect_0_led_pio_s1_readdata),   //  output,  width = 32,                    .readdata
		.in_port    (led_pio_external_connection_in_port),     //   input,   width = 3, external_connection.in_port
		.out_port   (led_pio_external_connection_out_port)     //  output,   width = 3,                    .out_port
	);

	pb_cpu_0 pb_cpu_0 (
		.clk              (periph_clk_out_clk_clk),         //   input,   width = 1,   clk.clk
		.reset            (~periph_rst_in_out_reset_reset), //   input,   width = 1, reset.reset
		.s0_waitrequest   (pb_cpu_0_s0_waitrequest),        //  output,   width = 1,    s0.waitrequest
		.s0_readdata      (pb_cpu_0_s0_readdata),           //  output,  width = 32,      .readdata
		.s0_readdatavalid (pb_cpu_0_s0_readdatavalid),      //  output,   width = 1,      .readdatavalid
		.s0_burstcount    (pb_cpu_0_s0_burstcount),         //   input,   width = 1,      .burstcount
		.s0_writedata     (pb_cpu_0_s0_writedata),          //   input,  width = 32,      .writedata
		.s0_address       (pb_cpu_0_s0_address),            //   input,   width = 9,      .address
		.s0_write         (pb_cpu_0_s0_write),              //   input,   width = 1,      .write
		.s0_read          (pb_cpu_0_s0_read),               //   input,   width = 1,      .read
		.s0_byteenable    (pb_cpu_0_s0_byteenable),         //   input,   width = 4,      .byteenable
		.s0_debugaccess   (pb_cpu_0_s0_debugaccess),        //   input,   width = 1,      .debugaccess
		.m0_waitrequest   (pb_cpu_0_m0_waitrequest),        //   input,   width = 1,    m0.waitrequest
		.m0_readdata      (pb_cpu_0_m0_readdata),           //   input,  width = 32,      .readdata
		.m0_readdatavalid (pb_cpu_0_m0_readdatavalid),      //   input,   width = 1,      .readdatavalid
		.m0_burstcount    (pb_cpu_0_m0_burstcount),         //  output,   width = 1,      .burstcount
		.m0_writedata     (pb_cpu_0_m0_writedata),          //  output,  width = 32,      .writedata
		.m0_address       (pb_cpu_0_m0_address),            //  output,   width = 9,      .address
		.m0_write         (pb_cpu_0_m0_write),              //  output,   width = 1,      .write
		.m0_read          (pb_cpu_0_m0_read),               //  output,   width = 1,      .read
		.m0_byteenable    (pb_cpu_0_m0_byteenable),         //  output,   width = 4,      .byteenable
		.m0_debugaccess   (pb_cpu_0_m0_debugaccess)         //  output,   width = 1,      .debugaccess
	);

	periph_clk periph_clk (
		.in_clk  (clk_clk),                //   input,  width = 1,  in_clk.clk
		.out_clk (periph_clk_out_clk_clk)  //  output,  width = 1, out_clk.clk
	);

	periph_rst_in periph_rst_in (
		.clk         (periph_clk_out_clk_clk),        //   input,  width = 1,       clk.clk
		.in_reset_n  (reset_reset_n),                 //   input,  width = 1,  in_reset.reset_n
		.out_reset_n (periph_rst_in_out_reset_reset)  //  output,  width = 1, out_reset.reset_n
	);

	subsys_periph_altera_mm_interconnect_1920_rzaxtci mm_interconnect_0 (
		.pb_cpu_0_m0_address                                      (pb_cpu_0_m0_address),                          //   input,   width = 9,                                        pb_cpu_0_m0.address
		.pb_cpu_0_m0_waitrequest                                  (pb_cpu_0_m0_waitrequest),                      //  output,   width = 1,                                                   .waitrequest
		.pb_cpu_0_m0_burstcount                                   (pb_cpu_0_m0_burstcount),                       //   input,   width = 1,                                                   .burstcount
		.pb_cpu_0_m0_byteenable                                   (pb_cpu_0_m0_byteenable),                       //   input,   width = 4,                                                   .byteenable
		.pb_cpu_0_m0_read                                         (pb_cpu_0_m0_read),                             //   input,   width = 1,                                                   .read
		.pb_cpu_0_m0_readdata                                     (pb_cpu_0_m0_readdata),                         //  output,  width = 32,                                                   .readdata
		.pb_cpu_0_m0_readdatavalid                                (pb_cpu_0_m0_readdatavalid),                    //  output,   width = 1,                                                   .readdatavalid
		.pb_cpu_0_m0_write                                        (pb_cpu_0_m0_write),                            //   input,   width = 1,                                                   .write
		.pb_cpu_0_m0_writedata                                    (pb_cpu_0_m0_writedata),                        //   input,  width = 32,                                                   .writedata
		.pb_cpu_0_m0_debugaccess                                  (pb_cpu_0_m0_debugaccess),                      //   input,   width = 1,                                                   .debugaccess
		.ILC_avalon_slave_address                                 (mm_interconnect_0_ilc_avalon_slave_address),   //  output,   width = 6,                                   ILC_avalon_slave.address
		.ILC_avalon_slave_write                                   (mm_interconnect_0_ilc_avalon_slave_write),     //  output,   width = 1,                                                   .write
		.ILC_avalon_slave_read                                    (mm_interconnect_0_ilc_avalon_slave_read),      //  output,   width = 1,                                                   .read
		.ILC_avalon_slave_readdata                                (mm_interconnect_0_ilc_avalon_slave_readdata),  //   input,  width = 32,                                                   .readdata
		.ILC_avalon_slave_writedata                               (mm_interconnect_0_ilc_avalon_slave_writedata), //  output,  width = 32,                                                   .writedata
		.led_pio_s1_address                                       (mm_interconnect_0_led_pio_s1_address),         //  output,   width = 2,                                         led_pio_s1.address
		.led_pio_s1_write                                         (mm_interconnect_0_led_pio_s1_write),           //  output,   width = 1,                                                   .write
		.led_pio_s1_readdata                                      (mm_interconnect_0_led_pio_s1_readdata),        //   input,  width = 32,                                                   .readdata
		.led_pio_s1_writedata                                     (mm_interconnect_0_led_pio_s1_writedata),       //  output,  width = 32,                                                   .writedata
		.led_pio_s1_chipselect                                    (mm_interconnect_0_led_pio_s1_chipselect),      //  output,   width = 1,                                                   .chipselect
		.dipsw_pio_s1_address                                     (mm_interconnect_0_dipsw_pio_s1_address),       //  output,   width = 2,                                       dipsw_pio_s1.address
		.dipsw_pio_s1_write                                       (mm_interconnect_0_dipsw_pio_s1_write),         //  output,   width = 1,                                                   .write
		.dipsw_pio_s1_readdata                                    (mm_interconnect_0_dipsw_pio_s1_readdata),      //   input,  width = 32,                                                   .readdata
		.dipsw_pio_s1_writedata                                   (mm_interconnect_0_dipsw_pio_s1_writedata),     //  output,  width = 32,                                                   .writedata
		.dipsw_pio_s1_chipselect                                  (mm_interconnect_0_dipsw_pio_s1_chipselect),    //  output,   width = 1,                                                   .chipselect
		.button_pio_s1_address                                    (mm_interconnect_0_button_pio_s1_address),      //  output,   width = 2,                                      button_pio_s1.address
		.button_pio_s1_write                                      (mm_interconnect_0_button_pio_s1_write),        //  output,   width = 1,                                                   .write
		.button_pio_s1_readdata                                   (mm_interconnect_0_button_pio_s1_readdata),     //   input,  width = 32,                                                   .readdata
		.button_pio_s1_writedata                                  (mm_interconnect_0_button_pio_s1_writedata),    //  output,  width = 32,                                                   .writedata
		.button_pio_s1_chipselect                                 (mm_interconnect_0_button_pio_s1_chipselect),   //  output,   width = 1,                                                   .chipselect
		.pb_cpu_0_reset_reset_bridge_in_reset_reset               (~periph_rst_in_out_reset_reset),               //   input,   width = 1,               pb_cpu_0_reset_reset_bridge_in_reset.reset
		.pb_cpu_0_m0_translator_reset_reset_bridge_in_reset_reset (~periph_rst_in_out_reset_reset),               //   input,   width = 1, pb_cpu_0_m0_translator_reset_reset_bridge_in_reset.reset
		.periph_clk_out_clk_clk                                   (periph_clk_out_clk_clk)                        //   input,   width = 1,                                 periph_clk_out_clk.clk
	);

endmodule
