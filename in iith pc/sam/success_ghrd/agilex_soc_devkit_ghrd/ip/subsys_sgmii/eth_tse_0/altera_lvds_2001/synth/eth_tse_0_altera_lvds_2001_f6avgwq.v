// eth_tse_0_altera_lvds_2001_f6avgwq.v

// This file was auto-generated from altera_lvds_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 22.4 94

`timescale 1 ps / 1 ps
module eth_tse_0_altera_lvds_2001_f6avgwq (
		input  wire [9:0] tx_in,          //          tx_in.export
		output wire [0:0] tx_out_p,       //       tx_out_p.export
		output wire [0:0] tx_out_n,       //       tx_out_n.export
		output wire       tx_coreclock,   //   tx_coreclock.export
		input  wire       pll_areset,     //     pll_areset.export
		input  wire [7:0] ext_vcoph,      //      ext_vcoph.export
		input  wire [1:0] ext_lvds_clk,   //   ext_lvds_clk.export
		input  wire [1:0] ext_loaden,     //     ext_loaden.export
		input  wire       ext_pll_locked, // ext_pll_locked.export
		output wire       pll_locked      //     pll_locked.export
	);

	eth_tse_0_intel_lvds_core10_191_vvutosq #(
		.NUM_CHANNELS                    (1),
		.J_FACTOR                        (10),
		.RX_BITSLIP_ROLLOVER             (10),
		.TX_REGISTER_CLOCK               ("tx_coreclock"),
		.TX_OUTCLOCK_NON_STD_PHASE_SHIFT ("false"),
		.TX_CHANNELS                     (1),
		.RX_CHANNELS                     (1),
		.SERDES_DPA_MODE                 ("tx_mode"),
		.SERDES_FACTOR                   ("factor10"),
		.BITSLIP_MAX                     ("bslip_0"),
		.BITSLIP_FUNC                    ("off_mode"),
		.VCO_DIV_EXPONENT                (0),
		.SER_CLK_FUNCTION                ("ser_txdat"),
		.FILTER_CODE                     ("freq_16ghz"),
		.FILTER_CODE_CPA                 ("freq_1600"),
		.SILICON_REV                     ("10nm8"),
		.DPA_DIV_VAL                     ("dpa_clk_div1"),
		.CORE0_DIV_VAL                   ("core_clk0_div10"),
		.CORE1_DIV_VAL                   ("core_clk1_div4"),
		.UFI_MODE                        ("pin_ufi_use_latch_out_direct"),
		.UFI_CLK_SEL                     ("pin_ufi_sel_clk0"),
		.UFI_LOCK_COUNTER                (19),
		.SYNTH_FOR_SIM                   (0),
		.VCO_FREQUENCY                   (1250),
		.TX_OUTCLOCK_ENABLED             ("false"),
		.TX_OUTCLOCK_DIV_WORD            (341),
		.EXTERNAL_PLL                    ("true"),
		.USE_BITSLIP                     ("false"),
		.USE_CPA                         ("true"),
		.USE_CPA_RECONFIG                ("false"),
		.NUM_CLOCKS                      (0),
		.WIDE_CT                         ("true"),
		.DPRIO_ENABLED                   ("false"),
		.USE_DUPLEX                      ("false")
	) core (
		.tx_in                   (tx_in),          //   input,  width = 10,          tx_in_conduit_end.export
		.tx_out_p                (tx_out_p),       //  output,   width = 1,       tx_out_p_conduit_end.export
		.tx_out_n                (tx_out_n),       //  output,   width = 1,       tx_out_n_conduit_end.export
		.tx_coreclock            (tx_coreclock),   //  output,   width = 1,   tx_coreclock_conduit_end.export
		.pll_areset              (pll_areset),     //   input,   width = 1,     pll_areset_conduit_end.export
		.ext_vcoph               (ext_vcoph),      //   input,   width = 8,      ext_vcoph_conduit_end.export
		.ext_lvds_clk            (ext_lvds_clk),   //   input,   width = 2,   ext_lvds_clk_conduit_end.export
		.ext_loaden              (ext_loaden),     //   input,   width = 2,     ext_loaden_conduit_end.export
		.ext_pll_locked          (ext_pll_locked), //   input,   width = 1, ext_pll_locked_conduit_end.export
		.pll_locked              (pll_locked),     //  output,   width = 1,     pll_locked_conduit_end.export
		.tx_outclock_p           (),               // (terminated),                                         
		.tx_outclock_n           (),               // (terminated),                                         
		.rx_in_p                 (1'b0),           // (terminated),                                         
		.rx_in_n                 (1'b0),           // (terminated),                                         
		.rx_out                  (),               // (terminated),                                         
		.rx_bitslip_reset        (1'b0),           // (terminated),                                         
		.rx_bitslip_ctrl         (1'b0),           // (terminated),                                         
		.rx_bitslip_max          (),               // (terminated),                                         
		.rx_dpa_locked           (),               // (terminated),                                         
		.rx_dpa_hold             (1'b0),           // (terminated),                                         
		.rx_dpa_reset            (1'b0),           // (terminated),                                         
		.rx_fifo_reset           (1'b0),           // (terminated),                                         
		.rx_divfwdclk            (),               // (terminated),                                         
		.loopback_in             (1'b0),           // (terminated),                                         
		.loopback_out            (),               // (terminated),                                         
		.user_dprio_rst_n        (1'b0),           // (terminated),                                         
		.user_dprio_read         (1'b0),           // (terminated),                                         
		.user_dprio_reg_addr     (9'b000000000),   // (terminated),                                         
		.user_dprio_write        (1'b0),           // (terminated),                                         
		.user_dprio_writedata    (8'b00000000),    // (terminated),                                         
		.user_dprio_clk_in       (1'b0),           // (terminated),                                         
		.user_mdio_dis           (1'b0),           // (terminated),                                         
		.user_dprio_clk          (),               // (terminated),                                         
		.user_dprio_block_select (),               // (terminated),                                         
		.user_dprio_readdata     (),               // (terminated),                                         
		.user_dprio_ready        (),               // (terminated),                                         
		.ext_coreclock           (1'b0),           // (terminated),                                         
		.rx_coreclock            ()                // (terminated),                                         
	);

endmodule
