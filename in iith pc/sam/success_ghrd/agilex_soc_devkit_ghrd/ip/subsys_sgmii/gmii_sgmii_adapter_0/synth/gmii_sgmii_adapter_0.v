// gmii_sgmii_adapter_0.v

// Generated using ACDS version 22.4 94

`timescale 1 ps / 1 ps
module gmii_sgmii_adapter_0 (
		input  wire        clk,             //         peri_clock.clk
		input  wire        rst_n,           //         peri_reset.reset_n
		input  wire        addr,            //       avalon_slave.address
		input  wire        read,            //                   .read
		input  wire        write,           //                   .write
		input  wire [31:0] writedata,       //                   .writedata
		output wire [31:0] readdata,        //                   .readdata
		input  wire        mac_tx_clk_o,    //           hps_gmii.phy_tx_clk_o
		input  wire        mac_rst_tx_n,    //                   .rst_tx_n
		input  wire        mac_rst_rx_n,    //                   .rst_rx_n
		input  wire [7:0]  mac_txd,         //                   .phy_txd_o
		input  wire        mac_txen,        //                   .phy_txen_o
		input  wire        mac_txer,        //                   .phy_txer_o
		input  wire [1:0]  mac_speed,       //                   .phy_mac_speed_o
		output wire        mac_tx_clk_i,    //                   .phy_tx_clk_i
		output wire        mac_rx_clk,      //                   .phy_rx_clk_i
		output wire        mac_rxdv,        //                   .phy_rxdv_i
		output wire        mac_rxer,        //                   .phy_rxer_i
		output wire [7:0]  mac_rxd,         //                   .phy_rxd_i
		output wire        mac_col,         //                   .phy_col_i
		output wire        mac_crs,         //                   .phy_crs_i
		output wire        pcs_rst_tx,      // pcs_transmit_reset.reset
		output wire        pcs_rst_rx,      //  pcs_receive_reset.reset
		input  wire        pcs_tx_clk,      // pcs_transmit_clock.clk
		input  wire        pcs_rx_clk,      //  pcs_receive_clock.clk
		input  wire        pcs_txclk_ena,   //   pcs_clock_enable.tx_clkena
		input  wire        pcs_rxclk_ena,   //                   .rx_clkena
		input  wire        pcs_gmii_rx_dv,  //           pcs_gmii.gmii_rx_dv
		input  wire [7:0]  pcs_gmii_rx_d,   //                   .gmii_rx_d
		input  wire        pcs_gmii_rx_err, //                   .gmii_rx_err
		output wire        pcs_gmii_tx_en,  //                   .gmii_tx_en
		output wire [7:0]  pcs_gmii_tx_d,   //                   .gmii_tx_d
		output wire        pcs_gmii_tx_err, //                   .gmii_tx_err
		input  wire        pcs_mii_rx_dv,   //            pcs_mii.mii_rx_dv
		input  wire [3:0]  pcs_mii_rx_d,    //                   .mii_rx_d
		input  wire        pcs_mii_rx_err,  //                   .mii_rx_err
		input  wire        pcs_mii_col,     //                   .mii_col
		input  wire        pcs_mii_crs,     //                   .mii_crs
		output wire        pcs_mii_tx_en,   //                   .mii_tx_en
		output wire [3:0]  pcs_mii_tx_d,    //                   .mii_tx_d
		output wire        pcs_mii_tx_err   //                   .mii_tx_err
	);

	altera_gmii_to_sgmii_adapter #(
		.CLOCK_ENABLE_TYPE (2),
		.DEVICE_FAMILY     ("Agilex")
	) altera_gmii_to_sgmii_adapter_inst (
		.clk             (clk),             //   input,   width = 1,         peri_clock.clk
		.rst_n           (rst_n),           //   input,   width = 1,         peri_reset.reset_n
		.addr            (addr),            //   input,   width = 1,       avalon_slave.address
		.read            (read),            //   input,   width = 1,                   .read
		.write           (write),           //   input,   width = 1,                   .write
		.writedata       (writedata),       //   input,  width = 32,                   .writedata
		.readdata        (readdata),        //  output,  width = 32,                   .readdata
		.mac_tx_clk_o    (mac_tx_clk_o),    //   input,   width = 1,           hps_gmii.phy_tx_clk_o
		.mac_rst_tx_n    (mac_rst_tx_n),    //   input,   width = 1,                   .rst_tx_n
		.mac_rst_rx_n    (mac_rst_rx_n),    //   input,   width = 1,                   .rst_rx_n
		.mac_txd         (mac_txd),         //   input,   width = 8,                   .phy_txd_o
		.mac_txen        (mac_txen),        //   input,   width = 1,                   .phy_txen_o
		.mac_txer        (mac_txer),        //   input,   width = 1,                   .phy_txer_o
		.mac_speed       (mac_speed),       //   input,   width = 2,                   .phy_mac_speed_o
		.mac_tx_clk_i    (mac_tx_clk_i),    //  output,   width = 1,                   .phy_tx_clk_i
		.mac_rx_clk      (mac_rx_clk),      //  output,   width = 1,                   .phy_rx_clk_i
		.mac_rxdv        (mac_rxdv),        //  output,   width = 1,                   .phy_rxdv_i
		.mac_rxer        (mac_rxer),        //  output,   width = 1,                   .phy_rxer_i
		.mac_rxd         (mac_rxd),         //  output,   width = 8,                   .phy_rxd_i
		.mac_col         (mac_col),         //  output,   width = 1,                   .phy_col_i
		.mac_crs         (mac_crs),         //  output,   width = 1,                   .phy_crs_i
		.pcs_rst_tx      (pcs_rst_tx),      //  output,   width = 1, pcs_transmit_reset.reset
		.pcs_rst_rx      (pcs_rst_rx),      //  output,   width = 1,  pcs_receive_reset.reset
		.pcs_tx_clk      (pcs_tx_clk),      //   input,   width = 1, pcs_transmit_clock.clk
		.pcs_rx_clk      (pcs_rx_clk),      //   input,   width = 1,  pcs_receive_clock.clk
		.pcs_txclk_ena   (pcs_txclk_ena),   //   input,   width = 1,   pcs_clock_enable.tx_clkena
		.pcs_rxclk_ena   (pcs_rxclk_ena),   //   input,   width = 1,                   .rx_clkena
		.pcs_gmii_rx_dv  (pcs_gmii_rx_dv),  //   input,   width = 1,           pcs_gmii.gmii_rx_dv
		.pcs_gmii_rx_d   (pcs_gmii_rx_d),   //   input,   width = 8,                   .gmii_rx_d
		.pcs_gmii_rx_err (pcs_gmii_rx_err), //   input,   width = 1,                   .gmii_rx_err
		.pcs_gmii_tx_en  (pcs_gmii_tx_en),  //  output,   width = 1,                   .gmii_tx_en
		.pcs_gmii_tx_d   (pcs_gmii_tx_d),   //  output,   width = 8,                   .gmii_tx_d
		.pcs_gmii_tx_err (pcs_gmii_tx_err), //  output,   width = 1,                   .gmii_tx_err
		.pcs_mii_rx_dv   (pcs_mii_rx_dv),   //   input,   width = 1,            pcs_mii.mii_rx_dv
		.pcs_mii_rx_d    (pcs_mii_rx_d),    //   input,   width = 4,                   .mii_rx_d
		.pcs_mii_rx_err  (pcs_mii_rx_err),  //   input,   width = 1,                   .mii_rx_err
		.pcs_mii_col     (pcs_mii_col),     //   input,   width = 1,                   .mii_col
		.pcs_mii_crs     (pcs_mii_crs),     //   input,   width = 1,                   .mii_crs
		.pcs_mii_tx_en   (pcs_mii_tx_en),   //  output,   width = 1,                   .mii_tx_en
		.pcs_mii_tx_d    (pcs_mii_tx_d),    //  output,   width = 4,                   .mii_tx_d
		.pcs_mii_tx_err  (pcs_mii_tx_err)   //  output,   width = 1,                   .mii_tx_err
	);

endmodule
